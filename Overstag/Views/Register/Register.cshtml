@model Overstag.Models.Account
@{
    ViewBag.Title = "Registreren";
    if (!string.IsNullOrEmpty(ViewBag.Message))
    {
        string color = (ViewBag.Message.StartsWith("[Err]")) ? "red" : "green";
        if (ViewBag.Message.StartsWith("[Err]")) { ViewBag.Message = ViewBag.Message.Replace("[Err]", ""); }
        <script>M.toast({ html: '@ViewBag.Message', classes: '@color' });</script>
    }
}
<body>
    <div class="row">
        <div class="col s12 m6 offset-m3">
            <h4 class="blue-light-text center-align"><b>Registreren</b></h4><br />
            <div class="card-panel" style="display: block; margin-left: auto; margin-right: auto">
                @using (Html.BeginForm("postRegister", "Register", FormMethod.Post, new { @class = "login-form", @id="frmRegister"}))
                {
                <div class="input-field">
                    <i class="material-icons prefix">account_circle</i>
                    @Html.TextBoxFor(m => m.Username, new { @class = "validate checki", id="Username", placeholder = "Gebruikersnaam" })
                    <label class="active" for="Username">Gebruikersnaam</label>
                </div>
                <div class="input-field">
                    <i class="material-icons prefix">lock</i>
                    @Html.PasswordFor(m => m.Password, new { @class = "validate checki", id = "Password", placeholder = "Wachtwoord" })
                    <label for="Password">Wachtwoord</label>
                </div>
                <div class="input-field">
                    <input type="password" placeholder="Wachtwoord herhalen" id="Passwordrep" class="checki" />
                    <label for="Passwordrep">Wachtwoord herhalen</label>
                    <span id="pwhelper" style="color: red; visibility: hidden;">Wachtwoorden komen niet overeen</span>
                </div>
                <div class="input-field">
                    <i class="material-icons prefix">email</i>
                    @Html.TextBoxFor(m => m.Email, new { @class = "validate checki", id = "Email", placeholder = "Email", type="email" })
                    <label for="Email">Email</label>
                    <span class="helper-text" data-error="Vul een geldig email adres in" data-success=""></span>
                </div>
                <div class="row">
                    <div class="input-field col s12 m6">
                        <i class="material-icons prefix">account_circle</i>
                        @Html.TextBoxFor(m => m.Firstname, new { @class = "validate checki", id = "first_name", placeholder = "Voornaam" })
                        <label for="first_name">Voornaam</label>
                    </div>
                    <div class="input-field col s12 m6">
                        @Html.TextBoxFor(m => m.Lastname, new { @class = "validate checki", id = "last_name", placeholder = "Achternaam" })
                        <label for="last_name">Achternaam</label>
                    </div>
                </div>
                <a>
                    @Html.ActionLink("Al een account? Log hier in", "Login", "Register")
                </a>
                <div class="card-action center-align">
                    <br />
                    <a class="btn btn-large blue-light waves-effect" id="register">Registreren</a><br />
                    <span id="tbhelper" style="color: red; visibility: hidden;">Vul alle velden in</span>
                </div>
                }


            </div>
        </div>
    </div>
</body>
<script>
    $("#_reg").addClass("active");
    $("#_mreg").addClass("active");
    //Detect & check if passwords matches
    $('#Password').change(function () {
        if ($('#Password').val() != $('#Passwordrep').val()) {
            $('#pwhelper').css('visibility', 'visible');
        } else { $('#pwhelper').css('visibility', 'hidden'); }
    });
    $('#Passwordrep').change(function () {
        if ($('#Password').val() != $('#Passwordrep').val()) {
            $('#pwhelper').css('visibility', 'visible');
        } else { $('#pwhelper').css('visibility', 'hidden'); }
    });

    $('#register').click(function () {
        var isValid = true;
        $('.checki').each(function () {
            if ($.trim($(this).val()) == '') {
                isValid = false;
            }
        });

        if (isValid) {
            postForm();
            $('#tbhelper').css('visibility', 'hidden');
        }
        else {
            $('#tbhelper').css('visibility', 'visible');
        }
    });

    var dataa;

    function postForm() {
        //$.post("Register/postRegister", { Username: $("#Username").val(), Password: $("#Password").val(), Email: $('#Email').val(), Firstname: $('#first_name').val(), Lastname: $('#last_name').val() }, function (data) {
        //    console.log(data.Username);
        //});

        /*var formdata = { Username: $("#Username").val(), Password: $("#Password").val(), Email: $('#Email').val(), Firstname: $('#first_name').val(), Lastname: $('#last_name').val() };
        $.ajax({
            url: 'Register/postRegister',
            data: JSON.stringify(formdata),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                console.log(data);
            },
            error: function (response) {
                alert("error!");  // error
                console.log(response);
            }
        });*/
        $('#frmRegister').submit();
    }

</script>