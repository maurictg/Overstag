@model Overstag.Models.NoDB.UnPaidEvents
@using Microsoft.AspNetCore.Http
@using Microsoft.EntityFrameworkCore;
@{
    Layout = "_UserLayout";
    ViewBag.Title = "Betalingen";
    System.Globalization.CultureInfo culture = new System.Globalization.CultureInfo("nl-NL");
}

    <div>
        @if (ViewBag.HasFamily)
        {
            <h4 class="red-text center-align" style="font-weight: bold;">De facturering wordt beheerd door de familie waarbij je aangesloten bent</h4>
        }
        else
        {
            @if (!ViewBag.IsParent)
            {
                <h3 class="center-align o-blue-text text-darken">Niet-gefactureerde activiteiten</h3>
                <div id="unPaidevents">
                    @if (Model.UnfacturedEvents.Count() > 0)
                    {
                        <table class="responsive-table">
                            <thead>
                                <tr>
                                    <th>Wat</th>
                                    <th>Wanneer</th>
                                    <th>Omschrijving</th>
                                    <th>Kosten aan drankjes</th>
                                    <th>Aantal vriend(inn)en</th>
                                    <th>Kosten</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{double topay = 0; }
                                @foreach (var e in Model.UnfacturedEvents)
                                {
                                    var p = Model.Subscriptions.First(f => f.EventID == e.Id);
                                    double c = (double)e.Cost;
                                    topay += c * (p.FriendCount + 1);
                                    topay += p.AdditionsCost;
                                    <tr>
                                        <td>@e.Title</td>
                                        <td>@e.When.ToString("D", culture) om @e.When.ToString("t", culture)</td>
                                        <td>@e.Description</td>

                                        @if (p.AdditionsCost > 0)
                                        {
                                            <td>&euro;&nbsp;@Math.Round((double)p.AdditionsCost / 100, 2).ToString("F")</td>
                                        }
                                        else
                                        {
                                            <td>-</td>
                                        }

                                        @if (p.FriendCount > 0)
                                        {
                                            <td>@p.FriendCount (<b>+&euro;@Math.Round(c * (p.FriendCount) / 100, 2).ToString("F")</b>)</td>
                                        }
                                        else
                                        {
                                            <td>-</td>
                                        }
                                        <td>&euro;@Math.Round(c / 100, 2).ToString("F") </td>
                                    </tr>
                                }
                                <tr class="grey lighten-4">
                                    <td colspan="6" class="center">
                                        <b>Totaal te verrekenen: &euro;@Math.Round(Convert.ToDecimal(topay) / 100, 2).ToString("F")</b>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <div class="center-align">
                            <a href="#ginvoice" class="waves-effect waves-light btn modal-trigger o-blue darken">Factuur genereren</a>
                        </div>
                        <br /><br />
                    }
                    else
                    {
                        <h5 class="center-align orange-text">Geen ongefactureerde activiteiten gevonden!</h5>
                    }
                </div>
            }

            <h3 class="center-align o-blue-text text-darken">Facturen</h3>
            <div id="factures">
                @if (Model.Invoices.Count() > 0)
                {
                    <ul class="collapsible">
                        @foreach (var item in Model.Invoices.OrderByDescending(f => f.Timestamp))
                        {
                            <li>
                                <div class="collapsible-header row hoverable">
                                    <div class="col s4">
                                        <h6><i class="material-icons">calendar_today</i>@item.Timestamp.ToString("d", culture)</h6>
                                    </div>
                                    <div class="col s4">
                                        <h6>Totaal: <b>&euro;@Math.Round((double)item.Amount / 100, 2).ToString("F")</b></h6>
                                    </div>
                                    <div class="col s4">
                                        <h6>Betaald: @Html.Raw(Overstag.Services.Html.YesNo(item.Paid))</h6>
                                    </div>
                                </div>
                                <div class="collapsible-body">
                                    <div class="col s3">
                                        @if (!item.Paid)
                                        {
                                            <a class="waves-effect waves-light btn green" onclick="Payment.getPay('@Uri.EscapeDataString(item.InvoiceID)')">Betalen &rarr;</a>
                                            <br />
                                        }
                                        else
                                        {
                                            <a class="waves-effect waves-light btn o-blue darken" target="_blank" href="/Pay/Invoice/@Uri.EscapeDataString(item.InvoiceID)">Factuur openen &rarr;</a>
                                        }
                                    </div>
                                    <table class="responsive-table">
                                        <thead>
                                            <tr>
                                                <th>Wat</th>
                                                <th>Wanneer</th>
                                                <th>Omschrijving</th>
                                                <th>Vrienden mee?</th>
                                                <th>Kosten</th>
                                                <th>Totaal</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var e in item.Events)
                                            {
                                                <tr>
                                                    <td>@e.Key.Title</td>
                                                    <td>@e.Key.When.ToString("D", culture) om @e.Key.When.ToString("t", culture)</td>
                                                    <td>@e.Key.Description</td>
                                                    <td>
                                                        @if (e.Value > 0)
                                                        {
                                                            @Html.Raw($"Ja, <b>{e.Value}</b>, (+&euro;{Math.Round((double)(e.Key.Cost * e.Value) / 100, 2).ToString("F")})")
                                                        }
                                                        else
                                                        {
                                                            @Html.Raw("Nee")
                                                        }
                                                    </td>
                                                    <td>&euro;@Math.Round((double)e.Key.Cost / 100, 2).ToString("F")</td>
                                                    <td><b>&euro;@Math.Round((double)e.Key.Cost * (e.Value + 1) / 100, 2).ToString("F")</b></td>
                                                </tr>
                                            }

                                            <tr>
                                                <td colspan="6" class="center-align white-text grey darken-1">
                                                    @Html.Raw((item.AdditionsCost > 0) ? $"<br />Let op: Het totaal is <b>inclusief</b> de drankjes. (&euro;{Math.Round((double)item.AdditionsCost / 100, 2).ToString("F")})" : "")
                                                    <h5>Totaal: &euro;@Math.Round((double)item.Amount / 100, 2).ToString("F")</h5><br />
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </li>
                        }
                    </ul>

                    @if (Model.Invoices.Where(f => f.Paid == false).Count() > 1)
                    {
                        @Html.Raw("&nbsp;")<button class="btn o-blue darken waves-effect modal-trigger" data-target="minvoice">&rarr; Facturen samenvoegen &larr;</button><br /><br />
                    }
                }
                else
                {
                    <h5 class="center-align orange-text">Geen facturen gevonden!</h5><br />
                }
            </div>

            @if (ViewBag.Age >= 18)
            {
                <br/><br/>
                <div class="row center-align">
                    <h3 class="o-blue-text text-darken">Kosten declareren</h3>
                    <p>Heb je kosten gemaakt voor Overstag, bijvoorbeeld benzinekosten of boodschappen? Declareer ze hier!</p>
                    <a class="btn o-blue darken waves-effect" href="/User/Declaration">Klik hier</a>
                    <br/><br/>
                </div>
            }

        }
    </div>

<!-- Modals -->
<div id="pay" class="modal">
    <div class="modal-content">
        <h4>Betalen</h4>
        <h6>Je kunt er voor kiezen om zelf te betalen of om deze betaallink naar iemand anders te sturen</h6>
        <input id="payid" type="text" placeholder="payid" data-pid="" />
        <a class="btn btn-small" onclick="Payment.gotoPay()">Nu zelf betalen</a>
        <a class="btn btn-small" onclick="Payment.copyPay()">Link kopiëren</a>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close waves-effect waves-green btn-flat">Sluiten</a>
    </div>
</div>

<div id="ginvoice" class="modal">
    <div class="modal-content">
        <h4>Factuur maken</h4>
        <p>
            Wanneer je een factuur maakt, worden alle tot nu toe niet betaalde of gefactureerde avonden
            (die staan hier boven) gefactureerd. Vervolgens kun je er zelf voor kiezen of je de factuur zelf, nu
            of later, of door een ander laat betalen door middel van een betaallink.
        </p>
    </div>
    <div class="modal-footer">
        <a href="#!" class="waves-effect waves-light btn modal-close orange">Laat maar</a>
        <a href="#!" onclick="Payment.generateInvoice()" class="waves-effect waves-light btn modal-close green">Oké!</a>
    </div>
</div>

<div id="minvoice" class="modal">
    <div class="modal-content">
        <h4>Facturen samenvoegen</h4>
        <h6>Als je de facturen samenvoegd worden alle tot nu toe niet-betaalde/openstaande facturen samengevoegd tot 1 factuur.</h6>
    </div>
    <div class="modal-footer">
        <a href="#!" class="waves-effect waves-light btn modal-close orange">Annuleren</a>
        <a href="#!" onclick="Payment.mergeInvoices();" class="waves-effect waves-light btn modal-close green">Oké doen!</a>
    </div>
</div>

<!--Script -->
<script>
    var Payment = {
        init: function () {
            $('#_apay, #_mapay').addClass('active');
        },
        generateInvoice: function () {
            $.getJSON('/User/GenerateInvoice', function (data) {
                if (data.status == 'success') {
                    M.toast({ html: 'Factuur gemaakt', classes: 'green' })
                    window.location.reload();
                } else {
                    M.toast({ html: data.error, classes: 'red' })
                }
            });
        },
        getPay: function (payid) {
            $('#payid').data('pid', payid);
            $('#payid').val(window.location.origin+'/Pay/Invoice/' + payid);
            M.Modal.getInstance($('#pay')).open();
        },
        gotoPay: function () {
            window.location.href = '/Pay/Invoice/' + $('#payid').data('pid');
        },
        copyPay: function () {
            $('#payid').select();
            document.execCommand("copy");
            M.toast({ html: 'Link gekopieërd!', classes: 'blue' });
        },
        mergeInvoices: function () {
            $('#_progbar').show();
            $.getJSON('/User/MergeInvoices', function (r) {
                if (r.status == 'success') {
                    M.toast({ html: 'Facturen successvol samengevoegd', classes: 'green' });
                    Core.doReload(500);
                } else {
                    M.toast({ html: r.error, classes: 'red' });
                    $('#_progbar').hide();
                }
            });
        }
    }

    Payment.init();

    $(document).ready(function () {
        $('.collapsible').collapsible();
        $('.modal').modal();
    });
</script>
