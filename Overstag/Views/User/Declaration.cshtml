@model List<Overstag.Accountancy.Transaction>
@{
    ViewBag.Title = "Declaraties";
    Layout = "_UserLayout";
}
<div>
    <h2 class="blue-dark-text center-align">Declaraties</h2>
</div>

@if (Model.Count() > 0)
{
    <table>
        <thead>
            <tr>
                <th>Datum</th>
                <th>Ingediend op</th>
                <th>Bedrag</th>
                <th>Omschrijving</th>
                <th>Type</th>
                <th>Uitbetaald</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var d in Model)
            {
                <tr>
                    <td>@d.When.ToString("dd-MM-yyyy")</td>
                    <td>@d.Timestamp.ToString("dd-MM-yyyy") om @d.Timestamp.ToString("HH:mm")</td>
                    <td>&euro;@Math.Round((double)d.Amount / 100, 2).ToString("F")</td>
                    <td>@d.Description</td>
                    <td id="type-@d.Id"></td>
                    <td>@Html.Raw(Overstag.Services.Html.YesNo(d.Payed))</td>
                </tr>
                <tr>
                    <td colspan="6" class="center-align photodata" data-id="@d.Id" data-json="@d.Metadata">
                        <p>Fotos niet ingeladen - <a href="#" onclick="Payment.loadImages();">Alles inladen</a></p>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h5 class="center-align">Geen ingediende declaraties gevonden</h5>
}
<br />
<br />
<div class="center-align">
    <a class="btn btn-large waves-effect blue-dark" id="btnshow" href="#add" onclick="Payment.showField()">Toevoegen</a>
</div>

<br />
<div id="add" class="center-align" style="display: none; border: 1px solid black;">
    <br />
    <h4>Declaratie indienen</h4>
    <p>Beantwoord de volgende vragen:</p>
    <br />
    <div class="row">
        <div class="input-field col m6 offset-m3 s12">
            <input id="when" type="text" class="datepicker validate">
            <label for="when">1. Wanneer heeft u de kosten gemaakt?</label>
            <span class="helper-text" data-error="Vul a.u.b. een datum in"></span>
        </div>
        <div class="input-field col m6 offset-m3 s12">
            <input id="amount" type="text" class="validate">
            <label for="amount">2. Wat is het bedrag in €</label>
            <span class="helper-text" data-error="Vul a.u.b. een bedrag in (kommagetal, 2 decimalen)"></span>
        </div>
        <div class="input-field col m6 offset-m3 s12">
            <textarea id="desc" type="text" class="validate materialize-textarea"></textarea>
            <label for="desc">3. Omschrijving</label>
            <span class="helper-text" data-error="Vul a.u.b. een omschrijving in"></span>
        </div>
        <div class="input-field col m6 offset-m3 s12">
            <p>Voeg eventueel een kassabon toe</p>
            <div class="file-field input-field">
                <div class="btn">
                    <span>Toevoegen</span>
                    <input type="file" id="files" multiple>
                </div>
                <div class="file-path-wrapper">
                    <input class="file-path" id="filestext" type="text" placeholder="Upload 1 of meer foto's">
                </div>
            </div>
        </div>
        <div class="col s12">
            Type:
            <p>
                <label>
                    <input class="with-gap" value="Brandstof" name="type" type="radio" checked="checked" />
                    <span>Brandstof</span>
                </label>
            </p>
            <p>
                <label>
                    <input class="with-gap" value="Boodschappen" name="type" type="radio" />
                    <span>Boodschappen</span>
                </label>
            </p>
            <p>
                <label>
                    <input class="with-gap" value="Activiteiten" name="type" type="radio" />
                    <span>Activiteiten</span>
                </label>
            </p>
            <p>
                <label>
                    <input class="with-gap" value="Overige" name="type" type="radio" />
                    <span>Overige</span>
                </label>
            </p>
        </div>
        <div class="col m6 offset-m3 s12">
            <p>
                <label>
                    <input type="checkbox" id="check" class="filled-in" />
                    <span>Ik heb alles naar waarheid ingevuld</span>
                </label>
            </p>
        </div>
    </div>
    <button class="btn waves-effect" onclick="Payment.hideField();">Annuleren</button>
    <button class="btn green waves-effect disabled" id="btnsend" onclick="Payment.startPost();">Verzenden</button>
    <br />
    <br />
</div>


<script>
    var done = false;

    var Payment = {
        init: function () {
            $('#_apay, #_mapay').addClass('active');
            $('#check').prop('checked', false);
            Payment.mapEvents();
            Payment.loadTypes();
        },
        mapEvents: function () {
            $('#check').change(function () {
                if (this.checked) {
                    $('#btnsend').removeClass('disabled');
                } else {
                    $('#btnsend').addClass('disabled');
                }
            });
        },
        loadTypes: function () {
            $.each($('.photodata'), function (i, e) {
                $('#type-' + $(e).data('id')).html($(e).data('json').type);
            });
        },
        loadImages: function () {
            $.each($('.photodata'), function (i, e) {
                var html = '<div class="row">';
                var json = $(e).data('json')
                if (json.files != '') {
                    var files = json.files.split(',');
                    $.each(files, function (i, e) {
                        html += `<img src="/Files/Serve/${encodeURIComponent(e)}" class="materialboxed col s3 m2"/>`
                    });
                } else {
                    html += '<i>Geen foto\'s geupload</i>'
                }
                $(e).html(html + '</row>');
            });
            $('.materialboxed').materialbox();
        },
        showField: function () {
            $('#add').show();
            $('#btnshow').hide();
        },
        hideField: function () {
            $('#add').hide();
            $('#btnshow').show();
        },
        validate: function () {
            var valid = true;
            if (!/^([0-9]*),([0-9][0-9])/.test($('#amount').val())) {
                $('#amount').addClass("invalid");
                $('#amount').prop("aria-invalid", "true");
                valid = false;
            }
            $.each($('.validate'), function (i, e) {
                if ($(e).val() == '') {
                    $(e).addClass("invalid");
                    $(e).prop("aria-invalid", "true");
                    valid = false;
                }
            });
            return valid;
        },
        startPost: function () {
            if (Payment.validate()) {
                $(window).scrollTop(0);
                $('#_progbar').show();
                Payment.hideField();
                $('#btnshow').addClass('disabled');
                if ($("#files").prop('files').length > 0) {
                    M.toast({ html: 'Uploaden....' });
                    $('#_progbar div').removeClass('indeterminate').addClass('determinate');
                    $('#_progbar div').css('width', '0%');
                    Payment.uploadPhotos(Payment.post);
                } else {
                    Payment.post();
                }
            }
        },
        post: function (fileids) {
            var files = '';
            if (fileids != undefined)
                files = fileids.join(',');

            var data = {
                When: $('#when').val(),
                Amount: Math.round(Number($('#amount').val().replace(",", ".")) * 100),
                Description: $('#desc').val(),
                Metadata: JSON.stringify({ type: $("input[name='type']:checked").val(), files: files })
            };

            $.post('/User/postDeclaration', data, function (r) {
                if (r.status == 'success') {
                    M.toast({ html: 'Successvol ingediend!', classes: 'green' });
                    Core.doReload(500);
                } else {
                    M.toast({ html: r.error, classes: 'red' });
                }
            }).done(function () {
                $('.validate').val('');
                $('#files, #filestext').val('');
                $('#_progbar').hide();
            });
        },
        uploadPhotos: function (_callback) {
            var formdata = new FormData();
            $.each($('#files').prop('files'), function (i, e) {
                formdata.append('files', e);
            });

            $.ajax({
                url: '/Files/uploadFiles',
                type: "POST",
                data: formdata,
                processData: false,
                contentType: false,
                xhr: function () {
                    var mxhr = $.ajaxSettings.xhr();
                    if (mxhr.upload) {
                        mxhr.upload.addEventListener('progress', progress, false);
                    }
                    return mxhr;
                },
                success: function (response) {
                    if (response.status === "success") {
                        M.toast({ html: 'Foto\'s geupload!', classes: 'blue' });
                        _callback(response.fileIDS);
                    }
                },
                error: function () {
                    M.toast({ html: 'Error: Uw foto kon niet geupload worden', classes: 'red' });
                    $('#_progbar div').removeClass('determinate').addClass('indeterminate');
                    $('#btnshow').removeClass('disabled');
                    $('#_progbar').hide();
                    done = true;
                },
                done: function () {
                    $('#_progbar div').removeClass('determinate').addClass('indeterminate');
                    $('#btnshow').removeClass('disabled');
                    done = true;
                }
            });
        }
    }

    function progress(e) {
        if (e.lengthComputable && !done) {
            var max = e.total;
            var current = e.loaded;
            var Percentage = Math.round((current * 100) / max);
            console.log("Uploaded: " + current + " out of " + max);
            $('#_progbar div').css('width', `${Percentage}%`);
        }
    }

    $(function () {
        $('.datepicker').datepicker({
            format: 'dd-mm-yyyy'
        });

        Payment.init();


    });
</script>

@if (Model.Count() < 5)
{
    <script>
        Payment.loadImages();
    </script>
}