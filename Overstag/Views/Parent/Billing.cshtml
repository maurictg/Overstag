@model List<Overstag.Models.Account>
@{
    Layout = "_UserLayout";
    System.Globalization.CultureInfo culture = new System.Globalization.CultureInfo("nl-NL");
    int eventcnt = 0;
    double Total = 0;
}

<h5 class="red-text hide-on-med-and-up"><i class="material-icons">warning</i>&nbsp;Deze pagina is overzichtelijker op een computer of een ander groot scherm.</h5>

<h3>Overzicht van ongefactureerde activiteiten per kind</h3>
<table>
    <thead>
        <tr>
            <th>Naam</th>
            <th>Activiteiten</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var u in Model)
        {
            <tr>
                <td><b>@u.Firstname</b></td>
                <td>
                    <table class="responsive-table">
                        <thead>
                            <tr>
                                <th>Titel</th>
                                <th>Datum</th>
                                <th>Kosten aan drankjes</th>
                                <th>Aantal vriend(inn)en</th>
                                <th>Kosten</th>
                                <th>Totaal</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (u.Subscriptions.Count(f => !f.Paid && Overstag.Core.General.DateIsPassed(f.Event.When)) > 0)
                            {
                                double total = 0;
                                double totalConsumptions = 0;
                                @foreach (var e in u.Subscriptions.Where(f => !f.Paid && Overstag.Core.General.DateIsPassed(f.Event.When)))
                                {
                                    eventcnt++;
                                    total += (double)(e.Event.Cost * (e.FriendCount+1));
                                    totalConsumptions += (double)e.AdditionsCost;
                                    <tr>
                                        <td>@e.Event.Title</td>
                                        <td>@e.Event.When.ToString("D", culture) om @e.Event.When.ToString("t", culture)</td>
                                        <td>
                                            @if (e.AdditionsCost > 0)
                                            {
                                                <span>&euro;@Math.Round((double)e.AdditionsCost / 100, 2).ToString("F")</span>
                                            }
                                            else { <b>-</b>}
                                        </td>
                                        <td>
                                            @if(e.FriendCount > 0)
                                            {
                                                @Html.Raw(e.FriendCount.ToString()+$" (+ <b>&euro;{Math.Round((double)(e.FriendCount*e.Event.Cost) / 100, 2).ToString("F")}</b>)")
                                            }
                                            else { <b>-</b>}
                                        </td>
                                        <td>&euro;@Math.Round((double)e.Event.Cost / 100, 2).ToString("F")</td>
                                        <td><b>&euro;@Math.Round((double)((e.Event.Cost * (e.FriendCount + 1)) + e.AdditionsCost) / 100, 2).ToString("F")</b></td>
                                    </tr>
                                }
                                <tr>
                                    <td class="center-align" colspan="6">
                                        Totaalbedrag: <b>&euro;@Math.Round((total+totalConsumptions) / 100, 2).ToString("F")</b>
                                        @{ Total += total + totalConsumptions; }
                                    </td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td colspan="6" class="center-align"><h6>Geen onverwerkte ongefactureerde avonden. Kijk onder &quot;Betalingen&quot;</h6></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </td>
            </tr>
        }

        @if(Total > 0)
        {
            <tr>
                <td colspan="2" class="white-text grey center-align"><h6>Eindtotaal: <b>&euro;@Math.Round(Total / 100, 2).ToString("F")</b></h6></td>
            </tr>
        }
    </tbody>
</table>

@if (eventcnt > 0)
{
    <div class="center-align">
        <br />
        <a class="waves-effect waves-light btn blue-dark modal-trigger" href="#areusure">Facturen maken en samenvoegen</a>
        <div class="progress" style="display: none;"><div class="indeterminate"></div></div>
    </div>
    <br />
}

<h3>Facturen</h3>
<h6>De facturen staan onder <b>&quot;<a href="/User/Payment">Betalingen</a>&quot;</b> in het menu.</h6>

<div class="fixed-action-btn">
    <a class="btn-floating btn-large blue-dark waves-effect" href="/Parent">
        <i class="large material-icons">arrow_back</i>
    </a>
</div>

<div class="modal" id="areusure">
    <div class="modal-content">
        <h4>Weet u zeker dat u de facturen wilt maken en samenvoegen? Controleer eerst de bedragen van de ongefactureerde activiteiten per kind.</h4>
        <p>Hiermee wordt er een factuur op uw naam gezet en worden de avonden die de kinderen samengevoegd door middel van extra &quot;vrienden&quot;. Dit is de enige manier op voor uw kind(eren) tegelijk af te rekenen. Als u 1 kind heeft gekoppeld wordt er gewoon een normale factuur gemaakt op uw naam.</p>
    </div>
    <div class="modal-footer">
        <button class="orange btn waves-effect modal-close">Annuleren</button>
        <button id="btngenerate" class="green btn waves-effect modal-close">Maken en samenvoegen</button>
    </div>
</div>


<script>
    var Billing = {
        init: function () {
            $('#_family, #_mfamily').addClass('active');
            Billing.mapEvents();
        },
        mapEvents: function () {
            $('#btngenerate').click(function () {
                $('#_progbar').show();
                $('#btngenerate').addClass('disabled');
                $.get('/Parent/GenerateInvoice', function (r) {
                    if (r.status == 'success') {
                        M.toast({ html: 'Activiteiten successvol verwerkt!', classes: 'green' });
                        OverstagJS.Loader.init(Billing.mergeInvoices);
                    } else {
                        if (r.status == 'warning') {
                            M.toast({ html: r.warning, classes: 'orange' });
                        } else {
                            M.toast({ html: r.error, classes: 'red' });
                            console.log(r);
                        }
                        $('#_progbar').hide();
                    }
                },'json');
            });
        },
        mergeInvoices: function () {
            OverstagJS.Loader.show();
            $.get('/Parent/MergeInvoices', function (r) {
                if (r.status == 'success') {
                    M.toast({ html: 'Facturen successvol samengevoegd!', classes: 'green' })
                    Core.doReload(1500);
                } else {
                    if (r.status == 'warning') {
                        M.toast({ html: r.warning, classes: 'orange' });
                    } else {
                        M.toast({ html: r.error, classes: 'red' });
                        console.log(r);
                    }
                    $('#_progbar').hide();
                }
            }, 'json').done(function () {
                OverstagJS.Loader.hide();
            });
        }
    }

    $(function () {
        Billing.init();
    });
</script>