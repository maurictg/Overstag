@model List<Overstag.Models.NoDB.SSubEvent>
@{
    Layout = "_MentorLayout";
    ViewBag.Title = "Statistieken";

    var after = new List<Overstag.Models.NoDB.SSubEvent>();
    var upcoming = new List<Overstag.Models.NoDB.SSubEvent>();

    foreach (var sse in Model)
    {
        if (sse.Event.When.Date >= DateTime.Now.Date)
        {
            upcoming.Add(sse);
        }
        else
        {
            after.Add(sse);
        }
    }
}

@{
    //DATA ALGORITHM FOR CHARTS AND STATS
    int tm = 0;
    int tv = 0;
    int tt = 0;
    int gm = 0;
    int gv = 0;

    List<int> mdata = new List<int>(); //man data (count)
    List<int> vdata = new List<int>(); //vrouw data (count)
    List<int> tdata = new List<int>(); //totaal data (count)
    List<string> aadata = new List<string>(); //age data (avg)
    List<string> ddata = new List<string>(); //dates

    foreach (var e in after)
    {
        //e.Sub.RemoveAll(f => f.account.Type != 0);
        if (e.Sub.Count() > 0)
        {
            aadata.Add(Math.Round(e.Sub.Select(f => Overstag.Core.General.getAge(f.account.Birthdate)).Average(),1).ToString().Replace(",","."));
        }

        int ttm = e.Sub.Count(f => f.account.Sex == 0);
        int ttv = e.Sub.Count(f => f.account.Sex == 1);
        tm += ttm;
        tv += ttv;
        mdata.Add(ttm);
        vdata.Add(ttv);
        tdata.Add(ttm + ttv + e.Sub.Sum(f => f.part.FriendCount));
        ddata.Add(e.Event.When.ToString("dd-MM-yyyy"));
    }

    foreach (var u in upcoming)
    {
        tt += u.Sub.Count();
    }

    try
    {
        gm = Convert.ToInt32(Math.Round(((double)tm / after.Count()), MidpointRounding.AwayFromZero));
        gv = Convert.ToInt32(Math.Round(((double)tv / after.Count()), MidpointRounding.AwayFromZero));
    }
    catch { }

}

<div>
    <div class="row">
        <h2 class="blue-middle-text center-align">Statistieken</h2>
        <hr />

        <div class="col s6 m3">
            <div class="card-panel center-align">
                <span class="flow-text">Aantal activiteiten afgelopen</span>
                <h3><b class="black-text">@after.Count()</b></h3>
            </div>
        </div>

        <div class="col s6 m3">
            <div class="card-panel center-align">
                <span class="flow-text">Aantal deelnemers geweest</span>
                <h3><b class="blue-text">@tm</b> m & <b class="red-text">@tv</b> v</h3>
            </div>
        </div>

        <div class="col s6 m3">
            <div class="card-panel center-align">
                <span class="flow-text">Aantal komende evenementen</span>
                <h3><b class="green-text">@upcoming.Count()</b></h3>
            </div>
        </div>

        <div class="col s6 m3">
            <div class="card-panel center-align">
                <span class="flow-text">Aantal deelnemers al ingeschreven</span>
                <h3><b class="grey-text">@tt</b></h3>
            </div>
        </div>

        <div class="row">
            <div class="col s12 m6">
                <div class="row">
                    <div class="card-panel col s12 m6">
                        <h5 class="center-align">Gemiddelde aantal m/v</h5>
                        <canvas id="gmvchart" style="height: 1em; width: 1em"></canvas>
                    </div>
                    <div class="card-panel col s12 m6">
                        <h5 class="center-align">Totaal aantal m/v</h5>
                        <canvas id="tmvchart" style="height: 1em; width: 1em"></canvas>
                    </div>
                    <div class="card-panel col s12 m6">
                        <h5 class="center-align">Trend deelnemers</h5>
                        <canvas id="trendchart" style="height: 1em; width: 1em"></canvas>
                    </div>
                    <div class="card-panel col s12 m6">
                        <h5 class="center-align">Gemiddelde leeftijd</h5>
                        <canvas id="agechart" style="height: 1em; width: 1em"></canvas>
                    </div>
                </div>
            </div>
            <div class="col s12 m6">
                <div class="row">
                    <div class="card-panel col s12">
                        <canvas id="mvchart" style="height: 1em; width: 1em"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <hr />

        <h2 class="blue-middle-text center-align" id="inschrijvingen">Inschrijvingen</h2>

        <h4>Eerstvolgende activiteiten</h4>

        <ul class="collapsible">
            @foreach (var e in upcoming.OrderBy(f => f.Event.When))
            {
                <li>
                    <div class="collapsible-header"><i class="material-icons">event</i><b>@e.Event.Title</b> &nbsp;&nbsp;@e.Event.When.ToString("dd-MM-yyyy HH:mm")</div>
                    <div class="collapsible-body">
                        <h6><b>Omschrijving:</b> @e.Event.Description</h6>
                        <h6>Totaal aantal deelnemers: <b>@e.Sub.Count() (<span class="blue-text">@e.Sub.Where(f => f.account.Sex == 0).Count()</span> / <span class="red-text">@e.Sub.Where(f => f.account.Sex == 1).Count()</span>)</b></h6>
                        <table class="responsive-table">
                            <thead>
                                <tr>
                                    <th>Naam</th>
                                    <th>Achternaam</th>
                                    <th>Leeftijd</th>
                                    <th>Geslacht</th>
                                    <th>Vriend(inn)en mee?</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var a in e.Sub.Where(f => f.account.Type < 3))
                                {
                                    <tr>
                                        <td>@a.account.Firstname</td>
                                        <td>@a.account.Lastname</td>
                                        <td>@Overstag.Core.General.getAge(a.account.Birthdate)</td>
                                        <td>@Html.Raw((a.account.Sex == 0) ? "<b class=\"blue-text\">Man</b>" : "<b class=\"red-text\">Vrouw</b>")</td>
                                        <td>@Html.Raw((a.part.FriendCount > 0) ? "Ja, <b class=\"green-text\">" + a.part.FriendCount + "</b>" : "Nee")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </li>
            }
        </ul>

        <h4>Afgelopen activiteiten</h4>
        <ul class="collapsible">
            @foreach (var e in after.OrderBy(f => f.Event.When).ToArray().Reverse())
            {
                <li>
                    <div class="collapsible-header"><i class="material-icons">event</i><b>@e.Event.Title</b> &nbsp;&nbsp;@e.Event.When.ToString("dd-MM-yyyy HH:mm")</div>
                    <div class="collapsible-body">
                        <h6><b>Omschrijving:</b> @e.Event.Description</h6>
                        <h6>Totaal aantal deelnemers: <b>@e.Sub.Count() (<span class="blue-text">@e.Sub.Where(f => f.account.Sex == 0).Count()</span> / <span class="red-text">@e.Sub.Where(f => f.account.Sex == 1).Count()</span>)</b></h6>
                        <a class="btn-small blue" href="/Mentor/Event/@e.Event.Id" target="_blank">Openen</a>
                        <table class="responsive-table">
                            <thead>
                                <tr>
                                    <th>Naam</th>
                                    <th>Achternaam</th>
                                    <th>Leeftijd</th>
                                    <th>Geslacht</th>
                                    <th>Vriend(inn)en mee?</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var a in e.Sub)
                                {
                                    <tr>
                                        <td>@a.account.Firstname</td>
                                        <td>@a.account.Lastname</td>
                                        <td>@Overstag.Core.General.getAge(a.account.Birthdate)</td>
                                        <td>@Html.Raw((a.account.Sex == 0) ? "<b class=\"blue-text\">Man</b>" : "<b class=\"red-text\">Vrouw</b>")</td>
                                        <td>@Html.Raw((a.part.FriendCount > 0) ? "Ja, <b class=\"green-text\">" + a.part.FriendCount + "</b>" : "Nee")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </li>
            }
        </ul>
    </div>


</div>
<script>
    var Stats = {
        init: function () {
            $('#_stats, #_mstats').addClass('active');
            Stats.creategMVChart();
            Stats.createtMVChart();
            Stats.createTChart();
            Stats.createEChart();
            Stats.createAChart();
        },
        creategMVChart: function () {
            var m = @gm;
            var v = @gv;

            var data = {
                datasets: [{
                    data: [m, v],
                    backgroundColor: [
                        'rgb(75, 133, 227)',
                        'rgb(227, 75, 141)'
                    ],
                }],

                labels: [
                    m+ ' mannen',
                    v+ ' vrouwen'
                ]
            };

            var MVChart = new Chart($('#gmvchart'), {
                type: 'doughnut',
                data: data
            });
        },
        createtMVChart: function () {
            var m = @tm;
            var v = @tv;

            var data = {
                datasets: [{
                    data: [m, v],
                    backgroundColor: [
                        'rgb(75, 133, 227)',
                        'rgb(227, 75, 141)'
                    ],
                }],

                labels: [
                    m+ ' mannen',
                    v+ ' vrouwen'
                ]
            };

            var MVChart = new Chart($('#tmvchart'), {
                type: 'doughnut',
                data: data
            });
        },
        createEChart: function () {
            var data = {
                labels: [@Html.Raw("'"+string.Join(',', ddata).Replace(",","','")+"'")],
                datasets: [
                {
                    label: 'Mannen',
                    backgroundColor: 'rgb(75, 133, 227)',
                    data: [
                        @Html.Raw(string.Join(',', mdata))
                    ]
                },
                {
                    label: 'Vrouwen',
                    backgroundColor: 'rgb(227, 75, 141)',
                    data: [
                        @Html.Raw(string.Join(',', vdata))
                    ]
                }]

            };

            var chart = new Chart($('#mvchart'), {
				type: 'bar',
				data: data,
				options: {
					title: {
						display: true,
						text: 'Mannen/vrouwen afgelopen avonden'
					},
					tooltips: {
						mode: 'index',
						intersect: false
					},
					responsive: true,
					scales: {
						xAxes: [{
							stacked: true,
						}],
						yAxes: [{
							stacked: true
						}]
					}
				}
			});
        },
        createTChart: function () {
            var data = {
                labels: [@Html.Raw("'"+string.Join(',', ddata).Replace(",","','")+"'")],
                datasets: [
                {
                    label: 'Aantal deelnemers',
                    backgroundColor: 'rgba(41, 158, 41, 0.5)',
                    data: [
                        @Html.Raw(string.Join(',', tdata))
                    ]
                }]
            };

            var options = {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            };

            var tc = new Chart($('#trendchart'), {
                type: 'line',
                data: data,
                options: options
            });
        },
        createAChart: function () {
            var data = {
                labels: [@Html.Raw("'"+string.Join(',', ddata).Replace(",","','")+"'")],
                datasets: [
                {
                    label: 'Leeftijd',
                    backgroundColor: 'rgba(50, 137, 168, 0.5)',
                    data: [
                        @Html.Raw(string.Join(',', aadata))
                    ]
                }]
            };

            var options = {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            };

            var tc = new Chart($('#agechart'), {
                type: 'line',
                data: data,
                options: options
            });
        }
    };

    $(document).ready(function () {
        $('.collapsible').collapsible();
        Stats.init();
    });

</script>
