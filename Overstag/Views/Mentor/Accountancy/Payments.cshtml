@model List<Overstag.Models.Payment>
@{
    Layout = "_AccountancyLayout";
}

<div class="row">
    <h2 class="blue-middle-text center-align">Betalingen</h2>

    <table class="responsive-table">
        <thead>
            <tr>
                <th>Voornaam</th>
                <th>Achternaam</th>
                <th>Bedrag</th>
                <th>Betaald</th>
                <th>Status</th>
                <th>Betaalmethode</th>
                <th>Kenmerk</th>
                <th>Geplaatst op</th>
                <th>Betaald op?</th>
                <th>Acties</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.User.Firstname</td>
                    <td>@item.User.Lastname</td>
                    <td>@Html.Raw(Overstag.Services.Html.Euro(item.Invoice.Amount))</td>
                    <td>@Html.Raw(Overstag.Services.Html.YesNo(item.IsPaid()))</td>
                    <td>@Html.Raw(Overstag.Services.Html.PayStatus(item.Status))</td>
                    <td>@item.PayType.ToString()</td>
                    <td>@item.PaymentId</td>
                    <td>@item.PlacedAt.ToString("dd-MM-yyyy HH:mm")</td>
                    <td>@((item.PaidAt == null)?"?":Convert.ToDateTime(item.PaidAt).ToString("dd-MM-yyyy HH:mm"))</td>
                    <td>
                        <a target="_blank" class="btn btn-small blue" href="/Pay/Invoice/@Uri.EscapeDataString(item.Invoice.InvoiceID)">Factuur &rarr;</a>
                        <button class="btn transparent waves-effect btn-small btnsetting black-text @(item.IsPaid()?" disabled":"")" data-id="@item.Id" data-type="@((int)item.PayType)" data-status="@((int)item.Status)"><i class="material-icons">settings</i></button>
                        @if (!string.IsNullOrEmpty(item.Metadata))
                        {
                            <button class="btn transparent waves-effect btn-small btninfo black-text" data-meta="@item.Metadata"><i class="material-icons">info</i></button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="mdSettings" class="modal">
    <div class="modal-content center-align">
        <h3>Betaling aanpassen</h3>
        <br/>
        <button id="btnMarkAsPaid" onclick="Payment.setPayment(0);" class="btn btn-large waves-effect blue modal-close">Markeren als betaald</button>
        <button id="btnCancel" onclick="Payment.setPayment(1);" class="btn btn-large waves-effect orange modal-close">Annuleren</button>
        <button id="btnDelete" onclick="Payment.setPayment(2);" class="btn btn-large waves-effect red modal-close">Verwijderen</button>
        <button id="btnUpdate" onclick="Payment.setPayment(4);" class="btn btn-large waves-effect green modal-close">Bijwerken</button>
        <br/>
    </div>
</div>

<div id="mdInfo" class="modal">
    <div class="modal-content center-align">
        <h3>Betalingsgegevens:</h3>
        <table class="responsive-table">
            <thead>
                <tr id="metaheaders"></tr>
            </thead>
            <tbody>
                <tr id="metadata"></tr>
            </tbody>
        </table>
        <br />
    </div>
    <div class="modal-footer">
        <button class="modal-close btn waves-effect blue">Sluiten</button>
    </div>
</div>

<script>
    let Payment = function () {
        return {
            init: () => {
                $('#_payments, #_mpayments').addClass('active');
                Payment.mapEvents();
            },
            mapEvents: () => {
                $('.btnsetting').click(function() {
                    let id = $(this).data('id');
                    let type = $(this).data('type');
                    let status = $(this).data('status');

                    //MarkAsPaid, Cancel, Delete, Update
                    let buttons;

                    $('#mdSettings').data('id', id);

                    switch (Number(type)) {
                        case 0:
                            buttons = [false, false, false, true];
                            break;
                        case 1:
                            buttons = [true, true, true, false];
                            break;
                        default:
                            buttons = [false, false, false, false];
                            break;
                    }

                    Payment.toggle($('#btnMarkAsPaid'), buttons[0]);
                    Payment.toggle($('#btnCancel'), buttons[1]);
                    Payment.toggle($('#btnDelete'), buttons[2]);
                    Payment.toggle($('#btnUpdate'), buttons[3]);
                    M.Modal.getInstance($('#mdSettings')).open();
                });

                $('.btninfo').click(function () {
                    let metadata = $(this).data('meta');
                    if (metadata) {
                        let headers = '';
                        let bodies = '';
                        for (let [k, v] of Object.entries(metadata)) {
                            headers += `<th>${k.charAt(0).toUpperCase() + k.slice(1)}</th>`;
                            bodies += `<td>${v}</td>`;
                        }
                        $('#metaheaders').html(headers);
                        $('#metadata').html(bodies);
                        M.Modal.getInstance($('#mdInfo')).open();
                    } else
                        $(this.remove());
                });
            },
            toggle: (e, show) => {
                if (show)
                    $(e).show();
                else
                    $(e).hide();
            },
            setPayment: (action) => {
                let id = $('#mdSettings').data('id');
                $('#_progbar').show();
                $.post('/Accountancy/SetStatus', { id: id, action: action }, (r) => {
                    $('#_progbar').hide();
                    if (r.status == 'success') {
                        M.toast({ html: 'Wijzigingen opgeslagen', classes: 'green', displayLength: 1500, completeCallback: () => { window.location.reload(); } });
                    } else {
                        M.toast({ html: r.error, classes: 'red' });
                    }
                });
            }
        };
    }();

    $(function () {
        Payment.init();
    });
</script>