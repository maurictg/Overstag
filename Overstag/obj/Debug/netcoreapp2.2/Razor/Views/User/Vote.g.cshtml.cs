#pragma checksum "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "31df3fbd294957dabbf749c29246977884c1a556"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_User_Vote), @"mvc.1.0.view", @"/Views/User/Vote.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/User/Vote.cshtml", typeof(AspNetCore.Views_User_Vote))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"31df3fbd294957dabbf749c29246977884c1a556", @"/Views/User/Vote.cshtml")]
    public class Views_User_Vote : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<Overstag.Models.Idea>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
  
    ViewBag.Title = "Vote";
    Layout = "~/Views/_UserLayout.cshtml";

#line default
#line hidden
            BeginContext(115, 230, true);
            WriteLiteral("\r\n<h3>IdeeÃ«n voor activiteiten</h3>\r\n<table class=\"responsive-table\">\r\n    <thead>\r\n        <tr>\r\n            <th>Titel</th>\r\n            <th>Omschrijving</th>\r\n            <th>Vote</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n");
            EndContext();
#line 17 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
         foreach (var idea in Model)
        {

#line default
#line hidden
            BeginContext(394, 63, true);
            WriteLiteral("            <tr>\r\n                <td>\r\n                    <b>");
            EndContext();
            BeginContext(458, 10, false);
#line 21 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
                  Write(idea.Title);

#line default
#line hidden
            EndContext();
            BeginContext(468, 131, true);
            WriteLiteral("</b>\r\n                    <div class=\"right\">\r\n                        <span class=\"new badge green\" data-badge-caption=\"likes\"><b>");
            EndContext();
            BeginContext(600, 34, false);
#line 23 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
                                                                               Write(idea.Votes.Count(i => i.Upvote==1));

#line default
#line hidden
            EndContext();
            BeginContext(634, 98, true);
            WriteLiteral("</b></span>\r\n                        <span class=\"new badge red\" data-badge-caption=\"dislikes\"><b>");
            EndContext();
            BeginContext(733, 34, false);
#line 24 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
                                                                                Write(idea.Votes.Count(i => i.Upvote==0));

#line default
#line hidden
            EndContext();
            BeginContext(767, 84, true);
            WriteLiteral("</b></span>\r\n                    </div>\r\n                </td>\r\n                <td>");
            EndContext();
            BeginContext(852, 16, false);
#line 27 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
               Write(idea.Description);

#line default
#line hidden
            EndContext();
            BeginContext(868, 29, true);
            WriteLiteral("</td>\r\n                <td>\r\n");
            EndContext();
#line 29 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
                     if (idea.Votes.Any(i => i.UserID == ViewBag.UserID))
                    {

#line default
#line hidden
            BeginContext(995, 36, true);
            WriteLiteral("                        <a data-id=\"");
            EndContext();
            BeginContext(1032, 7, false);
#line 31 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
                               Write(idea.Id);

#line default
#line hidden
            EndContext();
            BeginContext(1039, 1, true);
            WriteLiteral("\"");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 1040, "\"", 1183, 5);
            WriteAttributeValue("", 1048, "likebtn", 1048, 7, true);
            WriteAttributeValue(" ", 1055, "btn-floating", 1056, 13, true);
            WriteAttributeValue(" ", 1068, "waves-effect", 1069, 13, true);
            WriteAttributeValue(" ", 1081, "waves-green", 1082, 12, true);
#line 31 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
WriteAttributeValue(" ", 1093, Html.Raw((idea.Votes.First(i => i.UserID == ViewBag.UserID).Upvote == 1)?"green":"grey"), 1094, 89, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1184, 81, true);
            WriteLiteral("><i class=\"material-icons\">thumb_up</i></a>\r\n                        <a data-id=\"");
            EndContext();
            BeginContext(1266, 7, false);
#line 32 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
                               Write(idea.Id);

#line default
#line hidden
            EndContext();
            BeginContext(1273, 1, true);
            WriteLiteral("\"");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 1274, "\"", 1416, 5);
            WriteAttributeValue("", 1282, "dislikebtn", 1282, 10, true);
            WriteAttributeValue(" ", 1292, "btn-floating", 1293, 13, true);
            WriteAttributeValue(" ", 1305, "waves-effect", 1306, 13, true);
            WriteAttributeValue(" ", 1318, "waves-red", 1319, 10, true);
#line 32 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
WriteAttributeValue(" ", 1328, Html.Raw((idea.Votes.First(i => i.UserID == ViewBag.UserID).Upvote == 0)?"red":"grey"), 1329, 87, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1417, 47, true);
            WriteLiteral("><i class=\"material-icons\">thumb_down</i></a>\r\n");
            EndContext();
#line 33 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
                    }
                    else
                    {

#line default
#line hidden
            BeginContext(1536, 36, true);
            WriteLiteral("                        <a data-id=\"");
            EndContext();
            BeginContext(1573, 7, false);
#line 36 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
                               Write(idea.Id);

#line default
#line hidden
            EndContext();
            BeginContext(1580, 141, true);
            WriteLiteral("\" class=\"likebtn btn-floating waves-effect waves-green grey\"><i class=\"material-icons\">thumb_up</i></a>\r\n                        <a data-id=\"");
            EndContext();
            BeginContext(1722, 7, false);
#line 37 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
                               Write(idea.Id);

#line default
#line hidden
            EndContext();
            BeginContext(1729, 108, true);
            WriteLiteral("\" class=\"dislikebtn btn-floating waves-effect waves-red grey\"><i class=\"material-icons\">thumb_down</i></a>\r\n");
            EndContext();
#line 38 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
                    }

#line default
#line hidden
            BeginContext(1860, 42, true);
            WriteLiteral("                </td>\r\n            </tr>\r\n");
            EndContext();
#line 41 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Vote.cshtml"
        }

#line default
#line hidden
            BeginContext(1913, 2347, true);
            WriteLiteral(@"    </tbody>
</table>
<br />
<table class=""responsive-table"">
    <tr><td colspan=""3"" class=""center-align""><h6 style=""font-weight: bold;"">Idee toevoegen</h6></td></tr>
    <tr>
        <td>
            <input placeholder=""Titel"" id=""tbtitle"" type=""text"" class=""validate"">
        </td>
        <td>
            <input placeholder=""Omschrijving"" id=""tbdesc"" type=""text"" class=""validate"">
        </td>
        <td>
            <a class=""waves-effect waves-light btn blue-dark"" onclick=""Vote.addIdea();"">Toevoegen</a>
        </td>
    </tr>
</table>



<div class=""fixed-action-btn"">
    <a class=""btn-floating btn-large blue-dark waves-effect"" href=""/User/Events"">
        <i class=""large material-icons"">arrow_back</i>
    </a>
</div>

<script>
    var Vote = {
        init: function () {
            $('#_aevent').addClass('active');
            $('#_maevent').addClass('active');
            Vote.mapEvents();
        },
        mapEvents: function () {
            $('.likebtn').click(");
            WriteLiteral(@"function() {
                Vote.saveLike($(this).data('id'), 1);
            });
            $('.dislikebtn').click(function() {
                Vote.saveLike($(this).data('id'), 0);
            });
        },
        addIdea: function () {
            if ($('#tbtitle').val() == '' || $('#tbdesc').val() == '') {
                M.toast({ html: 'Vul a.u.b. alle velden in', classes: 'orange' });
            }
            else {
                $.post('/User/Vote/postIdea', { Title: $('#tbtitle').val(), Description: $('#tbdesc').val() }, function (r) {
                    if (r.status == 'success') {
                        window.location.reload();
                    } else {
                        M.toast({ html: r.error, classes: 'red' });
                    }
                },'json');
            }
        },
        saveLike: function (id, like) {
            $.get('/User/Vote/Like/' + id + '/' + like, function (r) {
                if (r.status == 'success') {
                ");
            WriteLiteral(@"    window.location.reload();
                }else {
                    M.toast({ html: r.error, classes: 'red' });
                    return false;
                }
            }, 'json');
        },
    };

    $(document).ready(function () {
        Vote.init();
    });
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<Overstag.Models.Idea>> Html { get; private set; }
    }
}
#pragma warning restore 1591
