#pragma checksum "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b4c76c7d1883fe65164360e9817234b4b773c5e5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_User_Payment), @"mvc.1.0.view", @"/Views/User/Payment.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/User/Payment.cshtml", typeof(AspNetCore.Views_User_Payment))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 2 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#line 3 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
using Microsoft.EntityFrameworkCore;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b4c76c7d1883fe65164360e9817234b4b773c5e5", @"/Views/User/Payment.cshtml")]
    public class Views_User_Payment : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Overstag.Models.NoDB.UnpayedEvents>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 4 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
  
    Layout = "~/Views/_UserLayout.cshtml";
    ViewBag.Title = "Betalingen";
    System.Globalization.CultureInfo culture = new System.Globalization.CultureInfo("nl-NL");
    var currentuser = new Overstag.Models.OverstagContext().Accounts.Include(f => f.Family).First(g => g.Token == Context.Session.GetString("Token"));

#line default
#line hidden
            BeginContext(449, 13, true);
            WriteLiteral("\r\n    <div>\r\n");
            EndContext();
#line 12 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
         if (currentuser.Family != null)
        {

#line default
#line hidden
            BeginContext(515, 123, true);
            WriteLiteral("            <h4 class=\"red-text center-align\" style=\"font-weight: bold;\">De facturering wordt beheert door uw ouder.</h4>\r\n");
            EndContext();
#line 15 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
        }
        else
        {

#line default
#line hidden
            BeginContext(674, 87, true);
            WriteLiteral("            <h3>Niet-gefactureerde avonden</h3>\r\n            <div id=\"unpayedevents\">\r\n");
            EndContext();
#line 20 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                 if (Model.UnfacturedEvents.Count() > 0)
                {

#line default
#line hidden
            BeginContext(838, 423, true);
            WriteLiteral(@"                    <table class=""responsive-table"">
                        <thead>
                            <tr>
                                <th>Wat</th>
                                <th>Wanneer</th>
                                <th>Omschrijving</th>
                                <th>Kosten</th>
                            </tr>
                        </thead>
                        <tbody>
");
            EndContext();
#line 32 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                              double topay = 0; 

#line default
#line hidden
            BeginContext(1312, 28, true);
            WriteLiteral("                            ");
            EndContext();
#line 33 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                             foreach (var e in Model.UnfacturedEvents)
                            {
                                double c = (double)e.Cost;
                                topay += c;

#line default
#line hidden
            BeginContext(1520, 78, true);
            WriteLiteral("                                <tr>\r\n                                    <td>");
            EndContext();
            BeginContext(1599, 7, false);
#line 38 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                   Write(e.Title);

#line default
#line hidden
            EndContext();
            BeginContext(1606, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(1654, 29, false);
#line 39 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                   Write(e.When.ToString("D", culture));

#line default
#line hidden
            EndContext();
            BeginContext(1683, 4, true);
            WriteLiteral(" om ");
            EndContext();
            BeginContext(1688, 29, false);
#line 39 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                     Write(e.When.ToString("t", culture));

#line default
#line hidden
            EndContext();
            BeginContext(1717, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(1765, 13, false);
#line 40 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                   Write(e.Description);

#line default
#line hidden
            EndContext();
            BeginContext(1778, 53, true);
            WriteLiteral("</td>\r\n                                    <td>&euro;");
            EndContext();
            BeginContext(1832, 36, false);
#line 41 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                         Write(Math.Round(c / 100, 2).ToString("F"));

#line default
#line hidden
            EndContext();
            BeginContext(1868, 46, true);
            WriteLiteral("</td>\r\n                                </tr>\r\n");
            EndContext();
#line 43 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                            }

#line default
#line hidden
            BeginContext(1945, 151, true);
            WriteLiteral("                            <tr class=\"grey lighten-4\">\r\n                                <td colspan=\"4\" class=\"center\"><b>Totaal te verrekenen: &euro;");
            EndContext();
            BeginContext(2097, 59, false);
#line 45 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                                         Write(Math.Round(Convert.ToDecimal(topay) / 100, 2).ToString("F"));

#line default
#line hidden
            EndContext();
            BeginContext(2156, 110, true);
            WriteLiteral("</b></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n");
            EndContext();
#line 49 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                }
                else
                {

#line default
#line hidden
            BeginContext(2326, 60, true);
            WriteLiteral("                    <h5>Geen ongefactureerde avonden!</h5>\r\n");
            EndContext();
#line 53 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                }

#line default
#line hidden
            BeginContext(2405, 84, true);
            WriteLiteral("            </div>\r\n            <h3>Facturen</h3>\r\n            <div id=\"factures\">\r\n");
            EndContext();
#line 57 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                 if (Model.UnfacturedEvents.Count() > 0)
                {

#line default
#line hidden
            BeginContext(2566, 230, true);
            WriteLiteral("                    <h6>&nbsp;Factuur genereren van ongefactureerde avonden</h6>\r\n                    <a href=\"#ginvoice\" class=\"waves-effect waves-light btn modal-trigger\">Factuur genereren</a>\r\n                    <br /><br />\r\n");
            EndContext();
#line 62 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                }

#line default
#line hidden
            BeginContext(2815, 16, true);
            WriteLiteral("                ");
            EndContext();
#line 63 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                 if (Model.Invoices.Count() > 0)
                {

#line default
#line hidden
            BeginContext(2884, 46, true);
            WriteLiteral("                    <ul class=\"collapsible\">\r\n");
            EndContext();
#line 66 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                         foreach (var item in Model.Invoices)
                        {

#line default
#line hidden
            BeginContext(3020, 340, true);
            WriteLiteral(@"                            <li>
                                <div class=""collapsible-header"">
                                    <table>
                                        <tbody>
                                            <tr>
                                                <td><i class=""material-icons"">calendar_today</i>");
            EndContext();
            BeginContext(3361, 37, false);
#line 73 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                                           Write(item.Timestamp.ToString("d", culture));

#line default
#line hidden
            EndContext();
            BeginContext(3398, 73, true);
            WriteLiteral("</td>\r\n                                                <td>Totaal: &euro;");
            EndContext();
            BeginContext(3472, 54, false);
#line 74 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                             Write(Math.Round((double)item.Amount / 100, 2).ToString("F"));

#line default
#line hidden
            EndContext();
            BeginContext(3526, 68, true);
            WriteLiteral("</td>\r\n                                                <td>Betaald: ");
            EndContext();
            BeginContext(3595, 87, false);
#line 75 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                        Write(Html.Raw((item.Payed) ? "<b class='green-text'>Ja</b>" : "<b class='red-text'>Nee</b>"));

#line default
#line hidden
            EndContext();
            BeginContext(3682, 258, true);
            WriteLiteral(@"</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <div class=""collapsible-body"">
");
            EndContext();
#line 81 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                     if (!item.Payed)
                                    {

#line default
#line hidden
            BeginContext(4034, 79, true);
            WriteLiteral("                                        <a class=\"waves-effect waves-light btn\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 4113, "\"", 4174, 3);
            WriteAttributeValue("", 4123, "Payment.getPay(\'", 4123, 16, true);
#line 83 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
WriteAttributeValue("", 4139, Uri.EscapeDataString(item.PayID), 4139, 33, false);

#line default
#line hidden
            WriteAttributeValue("", 4172, "\')", 4172, 2, true);
            EndWriteAttribute();
            BeginContext(4175, 62, true);
            WriteLiteral(">Betalen</a>\r\n                                        <br />\r\n");
            EndContext();
#line 85 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                    }

#line default
#line hidden
            BeginContext(4276, 585, true);
            WriteLiteral(@"
                                    <table class=""responsive-table"">
                                        <thead>
                                            <tr>
                                                <th>Wat</th>
                                                <th>Wanneer</th>
                                                <th>Omschrijving</th>
                                                <th>Kosten</th>
                                            </tr>
                                        </thead>
                                        <tbody>
");
            EndContext();
#line 97 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                             foreach (var e in item.Events)
                                            {

#line default
#line hidden
            BeginContext(4985, 110, true);
            WriteLiteral("                                                <tr>\r\n                                                    <td>");
            EndContext();
            BeginContext(5096, 7, false);
#line 100 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                   Write(e.Title);

#line default
#line hidden
            EndContext();
            BeginContext(5103, 63, true);
            WriteLiteral("</td>\r\n                                                    <td>");
            EndContext();
            BeginContext(5167, 29, false);
#line 101 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                   Write(e.When.ToString("D", culture));

#line default
#line hidden
            EndContext();
            BeginContext(5196, 4, true);
            WriteLiteral(" om ");
            EndContext();
            BeginContext(5201, 29, false);
#line 101 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                                     Write(e.When.ToString("t", culture));

#line default
#line hidden
            EndContext();
            BeginContext(5230, 63, true);
            WriteLiteral("</td>\r\n                                                    <td>");
            EndContext();
            BeginContext(5294, 13, false);
#line 102 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                   Write(e.Description);

#line default
#line hidden
            EndContext();
            BeginContext(5307, 69, true);
            WriteLiteral("</td>\r\n                                                    <td>&euro;");
            EndContext();
            BeginContext(5377, 49, false);
#line 103 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                         Write(Math.Round((double)e.Cost / 100, 2).ToString("F"));

#line default
#line hidden
            EndContext();
            BeginContext(5426, 62, true);
            WriteLiteral("</td>\r\n                                                </tr>\r\n");
            EndContext();
#line 105 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                            }

#line default
#line hidden
            BeginContext(5535, 126, true);
            WriteLiteral("\r\n                                            <tr><td colspan=\"4\" class=\"center-align white-text grey darken-1\">Totaal: &euro;");
            EndContext();
            BeginContext(5662, 54, false);
#line 107 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                                                                       Write(Math.Round((double)item.Amount / 100, 2).ToString("F"));

#line default
#line hidden
            EndContext();
            BeginContext(5716, 183, true);
            WriteLiteral("</td></tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </li>\r\n");
            EndContext();
#line 112 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                        }

#line default
#line hidden
            BeginContext(5926, 27, true);
            WriteLiteral("                    </ul>\r\n");
            EndContext();
#line 114 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                }
                else
                {

#line default
#line hidden
            BeginContext(6013, 59, true);
            WriteLiteral("                    <h5>Geen facturen gevonden</h5><br />\r\n");
            EndContext();
#line 118 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                }

#line default
#line hidden
            BeginContext(6091, 20, true);
            WriteLiteral("            </div>\r\n");
            EndContext();
#line 120 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
        }

#line default
#line hidden
            BeginContext(6122, 2617, true);
            WriteLiteral(@"    </div>

<!-- Modals -->
<div id=""pay"" class=""modal"">
    <div class=""modal-content"">
        <h4>Betalen</h4>
        <h6>Je kunt er voor kiezen om zelf te betalen of om deze betaallink naar iemand anders te sturen</h6>
        <input id=""payid"" type=""text"" placeholder=""payid"" data-pid="""" />
        <a class=""btn btn-small"" onclick=""Payment.gotoPay()"">Nu zelf betalen</a>
        <a class=""btn btn-small"" onclick=""Payment.copyPay()"">Link kopiëren</a>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-close waves-effect waves-green btn-flat"">Sluiten</a>
    </div>
</div>

<div id=""ginvoice"" class=""modal"">
    <div class=""modal-content"">
        <h4>Factuur maken</h4>
        <p>
            Wanneer je een factuur maakt, worden alle tot nu toe niet betaalde of gefactureerde avonden
            (die staan hier boven) gefactureerd. Vervolgens kun je er zelf voor kiezen of je de factuur zelf, nu
            of later, of door een ander laat betalen door middel van ee");
            WriteLiteral(@"n betaallink.
        </p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""waves-effect waves-light btn modal-close orange"">Laat maar</a>
        <a href=""#!"" onclick=""Payment.generateInvoice()"" class=""waves-effect waves-light btn modal-close green"">Oké!</a>
    </div>
</div>

<!--Script -->
<script>
    var Payment = {
        init: function () {
            $('#_apay').addClass('active');
            $('#_mapay').addClass('active');
        },
        generateInvoice: function () {
            $.getJSON('/User/GenerateInvoice', function (data) {
                if (data.status == 'success') {
                    M.toast({ html: 'Factuur gemaakt', classes: 'green' })
                    window.location.reload();
                } else {
                    M.toast({ html: data.error, classes: 'red' })
                }
            });
        },
        getPay: function (payid) {
            $('#payid').data('pid', payid);
            $('#payid').val('localho");
            WriteLiteral(@"st:5000/Pay/Direct/' + payid);
            M.Modal.getInstance($('#pay')).open();
        },
        gotoPay: function () {
            window.location.href = '/Pay/Direct/' + $('#payid').data('pid');
        },
        copyPay: function () {
            $('#payid').select();
            document.execCommand(""copy"");
            M.toast({ html: 'Link gekopieërd!', classes: 'blue' });
        }
    }

    Payment.init();

    $(document).ready(function () {
        $('.collapsible').collapsible();
        $('.modal').modal();
    });
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Overstag.Models.NoDB.UnpayedEvents> Html { get; private set; }
    }
}
#pragma warning restore 1591
