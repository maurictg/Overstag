#pragma checksum "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2530854ddfec392018e2373e64d839a232e04d96"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_User_Payment), @"mvc.1.0.view", @"/Views/User/Payment.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/User/Payment.cshtml", typeof(AspNetCore.Views_User_Payment))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2530854ddfec392018e2373e64d839a232e04d96", @"/Views/User/Payment.cshtml")]
    public class Views_User_Payment : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Overstag.Models.NoDB.UnpayedEvents>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
  
    Layout = "~/Views/_UserLayout.cshtml";
    ViewBag.Title = "Betalingen";
    System.Globalization.CultureInfo culture = new System.Globalization.CultureInfo("nl-NL");

#line default
#line hidden
            BeginContext(224, 80, true);
            WriteLiteral("\r\n<div>\r\n    <h3>Niet-gefactureerde avonden</h3>\r\n    <div id=\"unpayedevents\">\r\n");
            EndContext();
#line 11 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
         if (Model.UnfacturedEvents.Count() > 0)
        {

#line default
#line hidden
            BeginContext(365, 343, true);
            WriteLiteral(@"            <table class=""responsive-table"">
                <thead>
                    <tr>
                        <th>Wat</th>
                        <th>Wanneer</th>
                        <th>Omschrijving</th>
                        <th>Kosten</th>
                    </tr>
                </thead>
                <tbody>
");
            EndContext();
#line 23 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                      double topay = 0; 

#line default
#line hidden
            BeginContext(751, 20, true);
            WriteLiteral("                    ");
            EndContext();
#line 24 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                     foreach (var e in Model.UnfacturedEvents)
                    {
                        double c = (double)e.Cost;
                        topay += c;

#line default
#line hidden
            BeginContext(927, 62, true);
            WriteLiteral("                        <tr>\r\n                            <td>");
            EndContext();
            BeginContext(990, 7, false);
#line 29 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                           Write(e.Title);

#line default
#line hidden
            EndContext();
            BeginContext(997, 39, true);
            WriteLiteral("</td>\r\n                            <td>");
            EndContext();
            BeginContext(1037, 29, false);
#line 30 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                           Write(e.When.ToString("D", culture));

#line default
#line hidden
            EndContext();
            BeginContext(1066, 4, true);
            WriteLiteral(" om ");
            EndContext();
            BeginContext(1071, 29, false);
#line 30 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                             Write(e.When.ToString("t", culture));

#line default
#line hidden
            EndContext();
            BeginContext(1100, 39, true);
            WriteLiteral("</td>\r\n                            <td>");
            EndContext();
            BeginContext(1140, 13, false);
#line 31 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                           Write(e.Description);

#line default
#line hidden
            EndContext();
            BeginContext(1153, 45, true);
            WriteLiteral("</td>\r\n                            <td>&euro;");
            EndContext();
            BeginContext(1199, 36, false);
#line 32 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                 Write(Math.Round(c / 100, 2).ToString("F"));

#line default
#line hidden
            EndContext();
            BeginContext(1235, 38, true);
            WriteLiteral("</td>\r\n                        </tr>\r\n");
            EndContext();
#line 34 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                    }

#line default
#line hidden
            BeginContext(1296, 135, true);
            WriteLiteral("                    <tr class=\"grey lighten-4\">\r\n                        <td colspan=\"4\" class=\"center\"><b>Totaal te verrekenen: &euro;");
            EndContext();
            BeginContext(1432, 59, false);
#line 36 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                                 Write(Math.Round(Convert.ToDecimal(topay) / 100, 2).ToString("F"));

#line default
#line hidden
            EndContext();
            BeginContext(1491, 86, true);
            WriteLiteral("</b></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n");
            EndContext();
#line 40 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
        }
        else
        {

#line default
#line hidden
            BeginContext(1613, 52, true);
            WriteLiteral("            <h5>Geen ongefactureerde avonden!</h5>\r\n");
            EndContext();
#line 44 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
        }

#line default
#line hidden
            BeginContext(1676, 60, true);
            WriteLiteral("    </div>\r\n    <h3>Facturen</h3>\r\n    <div id=\"factures\">\r\n");
            EndContext();
#line 48 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
         if (Model.UnfacturedEvents.Count() > 0)
        {

#line default
#line hidden
            BeginContext(1797, 206, true);
            WriteLiteral("            <h6>&nbsp;Factuur genereren van ongefactureerde avonden</h6>\r\n            <a href=\"#ginvoice\" class=\"waves-effect waves-light btn modal-trigger\">Factuur genereren</a>\r\n            <br /><br />\r\n");
            EndContext();
#line 53 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
        }

#line default
#line hidden
            BeginContext(2014, 8, true);
            WriteLiteral("        ");
            EndContext();
#line 54 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
         if (Model.Invoices.Count() > 0)
        {

#line default
#line hidden
            BeginContext(2067, 38, true);
            WriteLiteral("            <ul class=\"collapsible\">\r\n");
            EndContext();
#line 57 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                 foreach (var item in Model.Invoices)
                {

#line default
#line hidden
            BeginContext(2179, 292, true);
            WriteLiteral(@"                    <li>
                        <div class=""collapsible-header"">
                            <table>
                                <tbody>
                                    <tr>
                                        <td><i class=""material-icons"">calendar_today</i>");
            EndContext();
            BeginContext(2472, 37, false);
#line 64 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                                   Write(item.Timestamp.ToString("d", culture));

#line default
#line hidden
            EndContext();
            BeginContext(2509, 65, true);
            WriteLiteral("</td>\r\n                                        <td>Totaal: &euro;");
            EndContext();
            BeginContext(2575, 54, false);
#line 65 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                     Write(Math.Round((double)item.Amount / 100, 2).ToString("F"));

#line default
#line hidden
            EndContext();
            BeginContext(2629, 60, true);
            WriteLiteral("</td>\r\n                                        <td>Betaald: ");
            EndContext();
            BeginContext(2690, 87, false);
#line 66 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                Write(Html.Raw((item.Payed) ? "<b class='green-text'>Ja</b>" : "<b class='red-text'>Nee</b>"));

#line default
#line hidden
            EndContext();
            BeginContext(2777, 218, true);
            WriteLiteral("</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div class=\"collapsible-body\">\r\n");
            EndContext();
#line 72 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                             if (!item.Payed)
                            {

#line default
#line hidden
            BeginContext(3073, 71, true);
            WriteLiteral("                                <a class=\"waves-effect waves-light btn\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 3144, "\"", 3183, 3);
            WriteAttributeValue("", 3154, "Payment.getPay(\'", 3154, 16, true);
#line 74 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
WriteAttributeValue("", 3170, item.PayID, 3170, 11, false);

#line default
#line hidden
            WriteAttributeValue("", 3181, "\')", 3181, 2, true);
            EndWriteAttribute();
            BeginContext(3184, 54, true);
            WriteLiteral(">Betalen</a>\r\n                                <br />\r\n");
            EndContext();
#line 76 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                            }

#line default
#line hidden
            BeginContext(3269, 505, true);
            WriteLiteral(@"
                            <table class=""responsive-table"">
                                <thead>
                                    <tr>
                                        <th>Wat</th>
                                        <th>Wanneer</th>
                                        <th>Omschrijving</th>
                                        <th>Kosten</th>
                                    </tr>
                                </thead>
                                <tbody>
");
            EndContext();
#line 88 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                     foreach (var e in item.Events)
                                    {

#line default
#line hidden
            BeginContext(3882, 94, true);
            WriteLiteral("                                        <tr>\r\n                                            <td>");
            EndContext();
            BeginContext(3977, 7, false);
#line 91 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                           Write(e.Title);

#line default
#line hidden
            EndContext();
            BeginContext(3984, 55, true);
            WriteLiteral("</td>\r\n                                            <td>");
            EndContext();
            BeginContext(4040, 29, false);
#line 92 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                           Write(e.When.ToString("D", culture));

#line default
#line hidden
            EndContext();
            BeginContext(4069, 4, true);
            WriteLiteral(" om ");
            EndContext();
            BeginContext(4074, 29, false);
#line 92 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                             Write(e.When.ToString("t", culture));

#line default
#line hidden
            EndContext();
            BeginContext(4103, 55, true);
            WriteLiteral("</td>\r\n                                            <td>");
            EndContext();
            BeginContext(4159, 13, false);
#line 93 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                           Write(e.Description);

#line default
#line hidden
            EndContext();
            BeginContext(4172, 61, true);
            WriteLiteral("</td>\r\n                                            <td>&euro;");
            EndContext();
            BeginContext(4234, 49, false);
#line 94 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                 Write(Math.Round((double)e.Cost / 100, 2).ToString("F"));

#line default
#line hidden
            EndContext();
            BeginContext(4283, 54, true);
            WriteLiteral("</td>\r\n                                        </tr>\r\n");
            EndContext();
#line 96 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                    }

#line default
#line hidden
            BeginContext(4376, 110, true);
            WriteLiteral("\r\n                                <td colspan=\"4\" class=\"center-align white-text grey darken-1\">Totaal: &euro;");
            EndContext();
            BeginContext(4487, 54, false);
#line 98 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                                                       Write(Math.Round((double)item.Amount / 100, 2).ToString("F"));

#line default
#line hidden
            EndContext();
            BeginContext(4541, 146, true);
            WriteLiteral("</td>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </li>\r\n");
            EndContext();
#line 103 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                }

#line default
#line hidden
            BeginContext(4706, 19, true);
            WriteLiteral("            </ul>\r\n");
            EndContext();
#line 105 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
        }
        else
        {

#line default
#line hidden
            BeginContext(4761, 51, true);
            WriteLiteral("            <h5>Geen facturen gevonden</h5><br />\r\n");
            EndContext();
#line 109 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
        }

#line default
#line hidden
            BeginContext(4823, 2603, true);
            WriteLiteral(@"    </div>
</div>

<!-- Modals -->
<div id=""pay"" class=""modal"">
    <div class=""modal-content"">
        <h4>Betalen</h4>
        <h6>Je kunt er voor kiezen om zelf te betalen of om deze betaallink naar iemand anders te sturen</h6>
        <input id=""payid"" type=""text"" placeholder=""payid"" data-pid="""" />
        <a class=""btn btn-small"" onclick=""Payment.gotoPay()"">Nu zelf betalen</a>
        <a class=""btn btn-small"" onclick=""Payment.copyPay()"">Link kopiëren</a>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-close waves-effect waves-green btn-flat"">Sluiten</a>
    </div>
</div>

<div id=""ginvoice"" class=""modal"">
    <div class=""modal-content"">
        <h4>Factuur maken</h4>
        <p>Wanneer je een factuur maakt, worden alle tot nu toe niet betaalde of gefactureerde avonden
        (die staan hier boven) gefactureerd. Vervolgens kun je er zelf voor kiezen of je de factuur zelf, nu
        of later, of door een ander laat betalen door middel van een betaallink.");
            WriteLiteral(@"
        </p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""waves-effect waves-light btn modal-close orange"">Laat maar</a>
        <a href=""#!"" onclick=""Payment.generateInvoice()"" class=""waves-effect waves-light btn modal-close green"">Oké!</a>
    </div>
</div>

<!--Script -->
<script>
    var Payment = {
        init: function () {
            $('#_apay').addClass('active');
            $('#_mapay').addClass('active');
        },
        generateInvoice: function () {
            $.getJSON('/User/GenerateInvoice', function (data) {
                if (data.status == 'success') {
                    M.toast({ html: 'Factuur gemaakt', classes: 'green' })
                    window.location.reload();
                } else {
                    M.toast({ html: data.error, classes: 'red' })
                }
            });
        },
        getPay: function (payid) {
            $('#payid').data('pid', payid);
            $('#payid').val('localhost:5000/Pay/Di");
            WriteLiteral(@"rect/' + payid);
            M.Modal.getInstance($('#pay')).open();
        },
        gotoPay: function () {
            window.location.href = '/Pay/Direct/' + $('#payid').data('pid');
        },
        copyPay: function () {
            $('#payid').select();
            document.execCommand(""copy"");
            M.toast({ html: 'Link gekopieërd!', classes: 'blue' });
        }
    }

    Payment.init();

    $(document).ready(function () {
        $('.collapsible').collapsible();
        $('.modal').modal();
    });
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Overstag.Models.NoDB.UnpayedEvents> Html { get; private set; }
    }
}
#pragma warning restore 1591
