#pragma checksum "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Pages\Public\Live\Lasergame.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "982c72d3150c3ac2d19c51577c87edeb8ceccb73"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Pages_Public_Live_Lasergame), @"mvc.1.0.razor-page", @"/Pages/Public/Live/Lasergame.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"982c72d3150c3ac2d19c51577c87edeb8ceccb73", @"/Pages/Public/Live/Lasergame.cshtml")]
    public class Pages_Public_Live_Lasergame : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Live.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Pages\Public\Live\Lasergame.cshtml"
  
    ViewData["Title"] = "Lasergame";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div>\r\n\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(" \r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "982c72d3150c3ac2d19c51577c87edeb8ceccb733336", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("Styles", async() => {
                WriteLiteral(@"
    <style>
        body {
            position: relative;
            z-index: 1;
            overflow: hidden;
        }

        body::before {
            opacity: 0.5;
            position: absolute;
            content:  url(""/img/wallpapers/abandoned.jpg"");
            z-index: -1;
        }
    </style>
");
            }
            );
            WriteLiteral(@"
<div id=""welcome"" class=""white-text center-align"">
    <h1><b>Welkom</b></h1>
    <h3>Meld je aan bij een post.</h3>
</div>

<div id=""roundover"" style=""display: none;"" class=""center-align"">
    <h1 class=""red-text""><b>Ronde voorbij</b></h1>
    <h3 class=""white-text"">Ga terug naar de post</h3>
</div>

<div id=""timer"" style=""display: none;"" class=""white-text center-align"">
    <br/>
    <h1 id=""lblcount"" style=""font-size: 20em; font-family: 'Segoe UI';"">20</h1>
</div>

<div id=""stats"" class=""row"" style=""display: none;"">
    <h1 class=""red-text"">stats</h1>
</div>

<script>
    var i = null;
    var round = 0;
    var roundLength = 300;
    var muted = false;

    var scoreboard = [];

    var nuclearAlarm;
    var tornadoAlarm;
    var emergencyAlarm;
    
    var Lasergame = {
        init: function () {
            $('#_title').html('&nbsp;Lasergame LIVE');
            $('#_title').parent().removeClass('blue-light').addClass('blue-grey darken-3');
            $('#nav-mobil");
            WriteLiteral("e>li>a\').addClass(\'blue-grey-text text-darken-3\');\r\n            $(\'body\').removeClass(\'blue-dark\').addClass(\'black\');\r\n\r\n            OverstagLive.init(\'wss://");
#nullable restore
#line 71 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Pages\Public\Live\Lasergame.cshtml"
                                Write(HttpContext.Request.Host);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"/ws?type=1&noBroadcast=1', Lasergame.handle)

            $('#_progbar>div').removeClass('indeterminate').addClass('determinate').css('width', '100%');
        },
        handle: function (data) {
            data = JSON.parse(data);
            switch (data.t) {
                case 'fillData':
                    {
                        if (data.data != null) {
                            var d = data.data;
                            round = d.round;
                            roundLength = d.roundLength;
                            muted = !d.allowAudio;

                            if (!muted)
                                Lasergame.includeAlarms();
                        }
                    }
                    break;
                case 'alert':
                    M.toast({ html: data.data, classes: 'orange' });
                    break;
                case 'nextRound':
                    {
                        round = Number(data.data) - 1;
                  ");
            WriteLiteral(@"      Lasergame.start();
                    }
                    break;
                case 'reset':
                    {
                        scoreboard = [];
                        Lasergame.clear();
                    }
                    break;
                case 'mute':
                    {
                        if (muted == false) {
                            nuclearAlarm.pause();
                            nuclearAlarm.currentTime = 0;
                            emergencyAlarm.pause();
                            emergencyAlarm.currentTime = 0;
                            tornadoAlarm.pause();
                            tornadoAlarm.currentTime = 0;
                        }

                        muted = true;
                    }
                    break;
                case 'unmute':
                    muted = false;
                    break;
                case 'playSound':
                    {
                        muted = false;
         ");
            WriteLiteral(@"               if (nuclearAlarm == undefined)
                            Lasergame.includeAlarms();

                        var playedPromise;

                        try {
                            if (data.data == 'nuclear') {
                                const promise = nuclearAlarm.play();
                                playedPromise = promise;
                            }
                            else if (data.data == 'emergency') {
                                const promise = emergencyAlarm.play();
                                playedPromise = promise;
                            }
                            else if(data.data == 'tornado'){
                                const promise = tornadoAlarm.play();
                                playedPromise = promise;
                            }

                            if (playedPromise) {
                                if (playedPromise.state == 'pending')
                                    M.toast({ html: '");
            WriteLiteral(@"Geef a.u.b. deze pagina rechten audio af te spelen', classes: 'red' });
                            }
                        } catch (err) {
                            console.log(err);
                            M.toast({ html: 'Geef a.u.b. deze pagina rechten audio af te spelen', classes: 'red' });
                        }
                    }
                    break;
                case 'updateScore':
                    {
                        var user = data.data.user;
                        var score = data.data.score;

                        for (var i = 0; i < scoreboard.length; i++) {
                            if (scoreboard[i].user == user) {
                                scoreboard[i].score = score;
                                Lasergame.updateStats();
                                return;
                            }
                        }

                        scoreboard.push({ user: user, score: score })
                        Lasergame.updateSt");
            WriteLiteral(@"ats();
                    }
                    break;
                default:
                    break;
            }
        },
        start: function () {
            Lasergame.clear();
            $('#timer').fadeIn();
            $('#lblcount').css('color', '');
            $('#lblcount').text('Ronde '+ (++round));
            setTimeout(function () {
                $('#_progbar>div').css('width', '100%');
                $('#_progbar').show();
                $('#lblcount').text('20');
                var count = 20;
                clearInterval(i);
                i = setInterval(function () {
                    if (count > -1) count--;
                    else {
                        clearInterval(i);
                        $('#timer, #_progbar').fadeOut('slow');
                        $('#stats').fadeIn('slow');

                        var time = roundLength;
                        i = setInterval(function () {
                            if (--time < 0) {
   ");
            WriteLiteral(@"                             Lasergame.clear();
                                $('#roundover').fadeIn('slow');
                                return;
                            }
                            $('#_title').html('&nbsp;Ronde ' + round + ' <b>' + time.toTimeString()+'</b>');
                        }, 1000);
                    }

                    if (count > 0) {
                        $('#_progbar>div').css('width', count * 5 + '%');
                        $('#lblcount').text(count);
                    } else {
                        $('#_progbar>div').css('width', '0%');
                        $('#lblcount').css('color', 'red');
                        $('#lblcount').text('Go!');
                    }

                }, 1000);
            }, 2000);
        },
        includeAlarms: function () {
            //Load alarms.
            nuclearAlarm = new Audio('/audio/nuclear.mp3');
            tornadoAlarm = new Audio('/audio/tornado.mp3');
            emergen");
            WriteLiteral(@"cyAlarm = new Audio('/audio/emergency.mp3');
            console.log('Loaded!');
        },
        clear: function () {
            $('#_progbar, #timer, #welcome, #roundover, #stats').fadeOut();
            clearInterval(i);
            $('#_title').html('&nbsp;Lasergame LIVE');
        },
        updateStats: function() {
            $('#stats').hide();
            var html = '';
            $.each(scoreboard, function (i, e) {
                html += `
                <div class=""col s12 m3"">
                <div class=""card-panel blue-grey darken-3 center-align"">
                    <h2 class=""white-text"">${e.user}</h1>
                    <h1 style=""font-size: 8em; margin-top: -0.1em;""><b class=""green-text"">${e.score}</b></h2>
                </div></div>
                `;
            });
            $('#stats').html(html);
            $('#stats').fadeIn();
        }
    };

    

    Number.prototype.toTimeString = function () {
        var sec_num = parseInt(this, 10);
  ");
            WriteLiteral(@"      var hours = Math.floor(sec_num / 3600);
        var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
        var seconds = sec_num - (hours * 3600) - (minutes * 60);

        if (minutes < 10) { minutes = ""0"" + minutes; }
        if (seconds < 10) { seconds = ""0"" + seconds; }
        return minutes + ':' + seconds;
    }

</script>
<script>
    $(function() {
        Lasergame.init();
    });
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Overstag.WebsocketsModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Overstag.WebsocketsModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Overstag.WebsocketsModel>)PageContext?.ViewData;
        public Overstag.WebsocketsModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
