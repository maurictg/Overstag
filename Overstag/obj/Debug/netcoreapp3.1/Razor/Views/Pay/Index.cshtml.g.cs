#pragma checksum "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a70158e2d3ae04e03e35324c4a6d02b6d762800c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Pay_Index), @"mvc.1.0.view", @"/Views/Pay/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a70158e2d3ae04e03e35324c4a6d02b6d762800c", @"/Views/Pay/Index.cshtml")]
    public class Views_Pay_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Overstag.Models.XInvoice>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/img/logo_2.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("responsive-img"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
  
    Layout = "_PayLayout";
    ViewBag.Title = "Welkom";
    ViewBag.InvoiceURL = Model.InvoiceID;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div id=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col s12 m2\">\r\n            <br />\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "a70158e2d3ae04e03e35324c4a6d02b6d762800c3656", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        </div>\r\n        <div class=\"col s12 m10 center-align\">\r\n            <h3>Factuur van ");
#nullable restore
#line 15 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                       Write(Model.User.Firstname);

#line default
#line hidden
#nullable disable
            WriteLiteral(" ");
#nullable restore
#line 15 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                             Write(Model.User.Lastname);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h3>
        </div>
    </div>
    <div class=""row"">
        <br />
        <ul class=""collapsible expandable"" id=""info"">
            <li>
                <div class=""collapsible-header""><i class=""material-icons"">account_circle</i><b>Gebruikersinformatie</b></div>
                <div class=""collapsible-body"">
                    <table class=""responsive-table"">
                        <thead>
                            <tr>
                                <th>Naam</th>
                                <th>Achternaam</th>
                                <th>Email</th>
                                <th>Adres</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>");
#nullable restore
#line 35 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                               Write(Model.User.Firstname);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 36 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                               Write(Model.User.Lastname);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td><i>");
#nullable restore
#line 37 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                  Write(Model.User.Email);

#line default
#line hidden
#nullable disable
            WriteLiteral("</i></td>\r\n                                <td>");
#nullable restore
#line 38 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                               Write(Model.User.Adress);

#line default
#line hidden
#nullable disable
            WriteLiteral("&nbsp;");
#nullable restore
#line 38 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                       Write(Model.User.Postalcode);

#line default
#line hidden
#nullable disable
            WriteLiteral("&nbsp;");
#nullable restore
#line 38 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                                                   Write(Model.User.Residence);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </li>
            <li>
                <div class=""collapsible-header""><i class=""material-icons"">calendar_today</i><b>Evenementen</b></div>
                <div class=""collapsible-body"">
                    <table class=""responsive-table"">
                        <thead>
                            <tr>
                                <th>Titel</th>
                                <th>Omschrijving</th>
                                <th>Datum en tijd</th>
                                <th>Vrienden mee?</th>
                                <th>Kosten</th>
                                <th>Totaal</th>
                            </tr>
                        </thead>
                        <tbody>
");
#nullable restore
#line 59 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                               int total = Model.AdditionsCost;

#line default
#line hidden
#nullable disable
#nullable restore
#line 60 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                             foreach (var e in Model.Events)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <tr>\r\n                                    <td>");
#nullable restore
#line 63 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                   Write(e.Key.Title);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td>");
#nullable restore
#line 64 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                   Write(string.Concat(e.Key.Description.Take(30)));

#line default
#line hidden
#nullable disable
#nullable restore
#line 64 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                                              Write((e.Key.Description.Length>30)?"...":"");

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td>");
#nullable restore
#line 65 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                   Write(e.Key.When.ToString("dd-MM-yyyy"));

#line default
#line hidden
#nullable disable
            WriteLiteral(" om ");
#nullable restore
#line 65 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                                         Write(e.Key.When.ToString("HH:mm"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td>\r\n");
#nullable restore
#line 67 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                         if (e.Value > 0)
                                        {
                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 69 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                       Write(Html.Raw($"Ja, <b>{e.Value}</b>, (+&euro;{Math.Round((double)(e.Key.Cost * e.Value) / 100, 2).ToString("F")})"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 69 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                                                                                                                            
                                        }
                                        else
                                        {
                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 73 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                       Write(Html.Raw("Nee"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 73 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                            
                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    </td>\r\n                                    <td>&euro;");
#nullable restore
#line 76 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                         Write(Math.Round((double)e.Key.Cost / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td><b>&euro;");
#nullable restore
#line 77 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                            Write(Math.Round((double)e.Key.Cost * (e.Value + 1) / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</b></td>\r\n                                </tr>\r\n");
#nullable restore
#line 79 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                total += (e.Key.Cost * (e.Value + 1));
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr>\r\n                                <td colspan=\"6\">\r\n");
#nullable restore
#line 83 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                     if (Model.AdditionsCost > 0)
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <p>Een aantal drankjes gekocht met een totale waarde van <b>&euro;");
#nullable restore
#line 85 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                                                                     Write(Math.Round((double)Model.AdditionsCost / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</b></p>\r\n");
#nullable restore
#line 86 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                    }
                                    else
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <p>Geen drankjes gekocht.</p>\r\n");
#nullable restore
#line 90 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colspan=\"6\" class=\"grey darken-1 white-text\">\r\n                                    <h6>Totaal: <b>&euro;");
#nullable restore
#line 95 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                    Write(Math.Round((double)total / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</b> ");
#nullable restore
#line 95 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                                                                           Write((Model.AdditionsCost>0)?"(inclusief drankjes)":"");

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h6>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </li>
            <li>
                <div class=""collapsible-header""><i class=""material-icons"">description</i><b>Factuurdetails</b></div>
                <div class=""collapsible-body"">
                    <table class=""responsive-table"">
                        <thead>
                            <tr>
                                <th>Datum</th>
                                <th>Tijd</th>
                                <th>Factuurkenmerk</th>
                                <th>Totaalbedrag</th>
                                <th>Betaald</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>");
#nullable restore
#line 117 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                               Write(Model.Timestamp.ToString("dd-MM-yyyy"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 118 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                               Write(Model.Timestamp.ToString("HH:mm:ss"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td><i>");
#nullable restore
#line 119 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                  Write(Model.InvoiceID);

#line default
#line hidden
#nullable disable
            WriteLiteral("</i></td>\r\n                                <td><b>&euro;");
#nullable restore
#line 120 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                        Write(Math.Round((double)Model.Amount / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</b></td>\r\n                                <td><b");
            BeginWriteAttribute("class", " class=\"", 6067, "\"", 6127, 1);
#nullable restore
#line 121 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
WriteAttributeValue("", 6075, Html.Raw((Model.Payed) ? "green-text" : "red-text"), 6075, 52, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 121 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                                                               Write(Html.Raw((Model.Payed) ? "Ja" : "Nee"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</b></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n");
#nullable restore
#line 126 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                     if (ViewBag.Payment != null)
                    {
                        Overstag.Models.Payment p = ViewBag.Payment;
                        DateTime dt = p.PayedAt ?? new DateTime(2000, 1, 1);
                        bool validated = (Model.Payed == (p.PayedAt != null && !string.IsNullOrEmpty(p.PaymentID) && p.Invoice.InvoiceID == Model.InvoiceID && Convert.ToInt32(p.Status) == 6));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        <br />
                        <table class=""responsive-table"">
                            <thead>
                                <tr>
                                    <th>Betalingskenmerk</th>
                                    <th>Geplaatst op</th>
                                    <th>Betaald op</th>
                                    <th>Betaling gevalideerd</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><b>");
#nullable restore
#line 143 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                      Write(p.PaymentID);

#line default
#line hidden
#nullable disable
            WriteLiteral("</b></td>\r\n                                    <td>");
#nullable restore
#line 144 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                   Write(p.PlacedAt.ToString("dd-MM-yyyy hh:mm:ss"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td>");
#nullable restore
#line 145 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                   Write(dt.ToString("dd-MM-yyyy hh:mm:ss"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td><b");
            BeginWriteAttribute("class", " class=\"", 7539, "\"", 7597, 1);
#nullable restore
#line 146 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
WriteAttributeValue("", 7547, Html.Raw((validated) ? "green-text" : "red-text"), 7547, 50, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 146 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                                                                 Write(Html.Raw((validated) ? "Ja" : "Nee"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</b></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n");
#nullable restore
#line 150 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                   Write(Html.Raw((!validated) ? "<h5 class=\"red-text\">Er is iets fout gegaan met de validatie. Neem a.u.b. contact op met de beheerder</h5>" : ""));

#line default
#line hidden
#nullable disable
#nullable restore
#line 150 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                                                                                                                                     ;
                    }
                    else
                    {
                        if (Model.Payed)
                        {
                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 156 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                       Write(Html.Raw("<h5 class=\"red-text\">Er is iets fout gegaan met de validatie. Neem a.u.b. contact op met de beheerder</h5>"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 156 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                                                                                                                     
                        }
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <br />\r\n                    <h6 id=\"printed_at\" style=\"display: none;\">Factuur geprint op: <b>");
#nullable restore
#line 160 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                                                 Write(DateTime.Now.ToString("dd-MM-yyyy"));

#line default
#line hidden
#nullable disable
            WriteLiteral("&nbsp;om&nbsp;");
#nullable restore
#line 160 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                                                                                                                                   Write(DateTime.Now.ToString("HH:mm:ss"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</b></h6>
                </div>
            </li>
        </ul>
    </div>

    <div class=""row"">
        <div class=""col s12 center-align"">
            <button class=""btn btn-large green waves-effect"" id=""btnprint"" onclick=""Invoice.startPrint();"">Printen</button>
");
#nullable restore
#line 169 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
             if (!Model.Payed)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <button class=\"btn btn-large blue waves-effect\" id=\"btnnext\" onclick=\"Invoice.checkout();\">Betalen &rarr;</button>\r\n");
#nullable restore
#line 172 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("        </div>\r\n    </div>\r\n</div>\r\n\r\n<form id=\"frmCheckout\" style=\"display: none;\" method=\"post\" action=\"/Pay/Checkout\">\r\n    <input name=\"invoiceid\"");
            BeginWriteAttribute("value", " value=\"", 9085, "\"", 9131, 1);
#nullable restore
#line 178 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
WriteAttributeValue("", 9093, Uri.EscapeDataString(Model.InvoiceID), 9093, 38, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n</form>\r\n\r\n<script>\r\n    var invoiceid = \'");
#nullable restore
#line 182 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\Pay\Index.cshtml"
                Write(Uri.EscapeDataString(Model.InvoiceID));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
    var cancelPayment = true;

    var Invoice = {
        init: function () {
            $('#_invoice, #_minvoice').addClass('active');
            M.Collapsible.getInstance($('#info')).open(2);
        },
        startPrint: function () {
            var elem = document.querySelector('.collapsible.expandable');
            var instance = M.Collapsible.init(elem, { accordion: false });
            instance.open(0); instance.open(1); instance.open(2);
            $('nav, #btnprint, #btnnext').hide();
            M.toast({ html: ""Printen..."", classes: ""blue rounded"", displayLength: 500, completeCallback: function() { Invoice.doPrint() } });
        },
        doPrint: function () {
            window.print();
            $('nav, #btnprint, #btnnext').show();
            var elem = document.querySelector('.collapsible.expandable');
            var instance = M.Collapsible.init(elem, { accordion: true });
            instance.close(0); instance.close(1); instance.close(2);
            $(");
            WriteLiteral(@"'#printedat').hide();
        },
        checkout: function () {
            $('#_progbar').show();
            $('#frmCheckout').submit();
            setTimeout(Invoice.hidePB, 10000);
        },
        hidePB: function () {
            $('#_progbar').hide();
        }
    };

    $(function () {
        $('.collapsible').collapsible();
        Invoice.init();
    });
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Overstag.Models.XInvoice> Html { get; private set; }
    }
}
#pragma warning restore 1591
