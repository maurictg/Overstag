#pragma checksum "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1a65ea2acfe9c05a3f56de8c3da9dc2e90b65b6b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Mentor_Accountancy_Payments), @"mvc.1.0.view", @"/Views/Mentor/Accountancy/Payments.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1a65ea2acfe9c05a3f56de8c3da9dc2e90b65b6b", @"/Views/Mentor/Accountancy/Payments.cshtml")]
    public class Views_Mentor_Accountancy_Payments : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<Overstag.Models.NoDB.MPayment>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
   
    ViewBag.Title = "Betalingen";
    Layout = "_AccountancyLayout";
    string[] Status = { "Open", "Geannuleerd", "In afwachting", "Geauthoriseerd", "Verlopen", "Mislukt", "Betaald" };
    string[] StatusColors = { "blue", "orange", "yellow darken-1", "green", "orange", "red", "green" };

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h2 class=\"center-align blue-middle-text\">Betalingen</h2>\r\n\r\n<button class=\"btn transparent waves-effect right\" onclick=\"Payment.syncPayments();\">\r\n    <i class=\"material-icons blue-light-text\">refresh</i>\r\n</button>\r\n<div>\r\n");
#nullable restore
#line 15 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
     if (Model.Count() > 0)
    {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        <table class=""responsive-table highlight"">
            <thead>
                <tr>
                    <th>Voornaam</th>
                    <th>Achternaam</th>
                    <th>Factuur gemaakt op</th>
                    <th>Betaling geplaatst op</th>
                    <th>Betaald</th>
                    <th># (IDeal ID)</th>
                    <th>IDEAL status</th>
                    <th>Betaald op</th>
                    <th>Kosten</th>
                    <th>Acties</th>
                </tr>
            </thead>
            <tbody>
");
#nullable restore
#line 33 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                 foreach (var i in Model)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <tr>\r\n                    <td><b>");
#nullable restore
#line 36 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                      Write(i.User.Firstname);

#line default
#line hidden
#nullable disable
            WriteLiteral("</b></td>\r\n                    <td><b>");
#nullable restore
#line 37 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                      Write(i.User.Lastname);

#line default
#line hidden
#nullable disable
            WriteLiteral("</b></td>\r\n                    <td>");
#nullable restore
#line 38 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                   Write(i.Invoice.Timestamp.ToString("dd-MM-yyyy HH:mm:ss"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>");
#nullable restore
#line 39 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                   Write(i.Payment.PlacedAt.ToString("dd-MM-yyyy HH:mm:ss"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>");
#nullable restore
#line 40 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                   Write(Html.Raw((i.Invoice.Payed == 0) ? "<b class=\"red-text\">Nee</b>" : "<b class=\"green-text\">Ja</b>"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>");
#nullable restore
#line 41 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                   Write(Html.Raw((i.Payment.PaymentID != null) ? i.Payment.PaymentID : "<b>?</b>"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>");
#nullable restore
#line 42 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                   Write(Html.Raw((i.Payment.Status != null) ? $"<b class=\"{StatusColors[Convert.ToInt32(i.Payment.Status)]}-text\">{Status[Convert.ToInt32(i.Payment.Status)]}</b>" : "<b>?</b>"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>");
#nullable restore
#line 43 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                   Write(Convert.ToDateTime(i.Payment.PayedAt).ToString("dd-MM-yyyy HH:mm:ss"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>&euro;");
#nullable restore
#line 44 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                         Write(Math.Round((double)i.Invoice.Amount / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <th>\r\n");
#nullable restore
#line 46 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                         if (i.Payment.Status == null || (int)i.Payment.Status == 0)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <a class=\"btn orange setpayed waves-effect\" data-iid=\"");
#nullable restore
#line 48 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                                                                             Write(i.Invoice.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" data-pid=\"");
#nullable restore
#line 48 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                                                                                                      Write(i.Payment.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" href=\"#\">Markeren als betaald</a>\r\n");
#nullable restore
#line 49 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 51 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                         if (i.Payment.Status == null || (int)i.Payment.Status == 0 || (int)i.Payment.Status == 6)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <a class=\"btn blue waves-effect\" target=\"_blank\"");
            BeginWriteAttribute("href", " href=\"", 2732, "\"", 2789, 2);
            WriteAttributeValue("", 2739, "/Pay/Direct/", 2739, 12, true);
#nullable restore
#line 53 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
WriteAttributeValue("", 2751, Uri.EscapeDataString(i.Invoice.PayID), 2751, 38, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">Factuur openen</a>\r\n");
#nullable restore
#line 54 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 56 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                         if (i.Payment.Status == null || ((int)i.Payment.Status < 6 && (int)i.Payment.Status != 0))
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <a class=\"btn red removepayed waves-effect\" data-pid=\"");
#nullable restore
#line 58 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                                                                             Write(i.Payment.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" href=\"#\">Verwijderen</a>\r\n");
#nullable restore
#line 59 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </th>\r\n                </tr>\r\n");
#nullable restore
#line 62 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
                }

#line default
#line hidden
#nullable disable
            WriteLiteral("            </tbody>\r\n        </table>\r\n");
#nullable restore
#line 65 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
    }
    else
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("        <hr /><h3 class=\"center-align\">Geen betalingen gevonden</h3><hr />\r\n");
#nullable restore
#line 69 "C:\Users\maurict\Documents\GitHub\Overstag\Overstag\Views\Mentor\Accountancy\Payments.cshtml"
    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</div>

<div id=""areusure"" class=""modal"">
    <div class=""modal-content"">
        <h4>Weet je zeker dat je deze betaling wilt markeren als betaald?</h4>
        <p>Hiermee wordt als ware een valse ideal betaling aangemaakt.<br /><b> Dit kan in principe niet meer ongedaan worden gemaakt.</b></p>
    </div>
    <div class=""modal-footer"">
        <button class=""modal-close btn green waves-effect"">Annuleren</button>
        <button onclick=""Payment.setPayed();"" class=""btn modal-close red waves-effect"">Markeren als betaald</button>
    </div>
</div>

<div id=""suredelete"" class=""modal"">
    <div class=""modal-content"">
        <h4>Weet je zeker dat je deze betaling wilt verwijderen?</h4>
        <b> Dit kan niet meer ongedaan worden gemaakt!</b></p>
    </div>
    <div class=""modal-footer"">
        <button class=""modal-close btn green waves-effect"">Annuleren</button>
        <button onclick=""Payment.delete();"" class=""btn modal-close red waves-effect"">Verwijderen</button>
    </div>
</div>

<s");
            WriteLiteral(@"cript>
    var iid = 0;
    var pid = 0;

    var Payment = {
        init: function () {
            $('#_pay, #_mpay').addClass('active');
            Payment.mapEvents();
        },
        mapEvents: function () {
            $('.setpayed').off().on('click', function () {
                iid = $(this).data('iid');
                pid = $(this).data('pid');
                M.Modal.getInstance($('#areusure')).open();
            });
            $('.removepayed').off().on('click', function () {
                pid = $(this).data('pid');
                M.Modal.getInstance($('#suredelete')).open();
            });
        },
        setPayed: function () {
            $('#_progbar').show();
            $.post('/Accountancy/markAsPayed', { payed: 1, payid: pid, invoiceid: iid }, function (r) {
                if (r.status == 'success') {
                    M.toast({ html: 'Wijzigingen opgeslagen', classes: 'green' });
                    Core.doReload(500);
                } else {
");
            WriteLiteral(@"                    M.toast({ html: r.error, classes: 'red' });
                    $('#_progbar').hide();
                }
            });
        },
        delete: function() {
            $('#_progbar').show();
            $.post('/Accountancy/removePayment', { payid: pid }, function (r) {
                if (r.status == 'success') {
                    M.toast({ html: 'Betaling verwijderd', classes: 'green' });
                    Core.doReload(500);
                } else {
                    M.toast({ html: r.error, classes: 'red' });
                    $('#_progbar').hide();
                }
            });
        },
        syncPayments: function() {
            $('#_progbar').show();
            $.getJSON('/Accountancy/UpdatePayments', function (r) {
                if (r.status == 'success') {
                    M.toast({ html: 'Betalingen bijgewerkt.', classes: 'blue' });
                    Core.doReload(500);
                } else {
                    M.toast({ ht");
            WriteLiteral("ml: r.error, classes: \'red\' });\r\n                    $(\'#_progbar\').hide();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    $(function () {\r\n        Payment.init();\r\n    });\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<Overstag.Models.NoDB.MPayment>> Html { get; private set; }
    }
}
#pragma warning restore 1591
