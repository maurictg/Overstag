#pragma checksum "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f3dcd294e2ebebe6e14fc494a64fdee90a7f058d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_User_Payment), @"mvc.1.0.view", @"/Views/User/Payment.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
using Microsoft.EntityFrameworkCore;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f3dcd294e2ebebe6e14fc494a64fdee90a7f058d", @"/Views/User/Payment.cshtml")]
    public class Views_User_Payment : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Overstag.Models.NoDB.UnpayedEvents>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
  
    Layout = "_UserLayout";
    ViewBag.Title = "Betalingen";
    System.Globalization.CultureInfo culture = new System.Globalization.CultureInfo("nl-NL");

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    <div>\r\n");
#nullable restore
#line 11 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
         if (ViewBag.HasFamily)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <h4 class=\"red-text center-align\" style=\"font-weight: bold;\">De facturering wordt beheerd door de familie waarbij je aangesloten bent</h4>\r\n");
#nullable restore
#line 14 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
        }
        else
        {
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
             if (!ViewBag.IsParent)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <h3 class=\"center-align blue-dark-text\">Niet-gefactureerde activiteiten</h3>\r\n                <div id=\"unpayedevents\">\r\n");
#nullable restore
#line 21 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                     if (Model.UnfacturedEvents.Count() > 0)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        <table class=""responsive-table"">
                            <thead>
                                <tr>
                                    <th>Wat</th>
                                    <th>Wanneer</th>
                                    <th>Omschrijving</th>
                                    <th>Kosten aan drankjes</th>
                                    <th>Aantal vriend(inn)en</th>
                                    <th>Kosten</th>
                                </tr>
                            </thead>
                            <tbody>
");
#nullable restore
#line 35 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                  double topay = 0; 

#line default
#line hidden
#nullable disable
#nullable restore
#line 36 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                 foreach (var e in Model.UnfacturedEvents)
                                {
                                    var p = Model.Subscriptions.First(f => f.EventID == e.Id);
                                    double c = (double)e.Cost;
                                    topay += c * (p.FriendCount + 1);
                                    topay += p.AdditionsCost;

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    <tr>\r\n                                        <td>");
#nullable restore
#line 43 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                       Write(e.Title);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                        <td>");
#nullable restore
#line 44 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                       Write(e.When.ToString("D", culture));

#line default
#line hidden
#nullable disable
            WriteLiteral(" om ");
#nullable restore
#line 44 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                         Write(e.When.ToString("t", culture));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                        <td>");
#nullable restore
#line 45 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                       Write(e.Description);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n\r\n");
#nullable restore
#line 47 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                         if (p.AdditionsCost > 0)
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <td>&euro;&nbsp;");
#nullable restore
#line 49 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                       Write(Math.Round((double)p.AdditionsCost / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n");
#nullable restore
#line 50 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                        }
                                        else
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <td>-</td>\r\n");
#nullable restore
#line 54 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 56 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                         if (p.FriendCount > 0)
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <td>");
#nullable restore
#line 58 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                           Write(p.FriendCount);

#line default
#line hidden
#nullable disable
            WriteLiteral(" (<b>+&euro;");
#nullable restore
#line 58 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                     Write(Math.Round(c * (p.FriendCount) / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</b>)</td>\r\n");
#nullable restore
#line 59 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                        }
                                        else
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <td>-</td>\r\n");
#nullable restore
#line 63 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <td>&euro;");
#nullable restore
#line 64 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                             Write(Math.Round(c / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral(" </td>\r\n                                    </tr>\r\n");
#nullable restore
#line 66 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <tr class=\"grey lighten-4\">\r\n                                    <td colspan=\"6\" class=\"center\">\r\n                                        <b>Totaal te verrekenen: &euro;");
#nullable restore
#line 69 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                  Write(Math.Round(Convert.ToDecimal(topay) / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</b>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <div class=""center-align"">
                            <a href=""#ginvoice"" class=""waves-effect waves-light btn modal-trigger blue-dark"">Factuur genereren</a>
                        </div>
                        <br /><br />
");
#nullable restore
#line 79 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                    }
                    else
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <h5 class=\"center-align orange-text\">Geen ongefactureerde activiteiten gevonden!</h5>\r\n");
#nullable restore
#line 83 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </div>\r\n");
#nullable restore
#line 85 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("            <h3 class=\"center-align blue-dark-text\">Facturen</h3>\r\n            <div id=\"factures\">\r\n");
#nullable restore
#line 89 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                 if (Model.Invoices.Count() > 0)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <ul class=\"collapsible\">\r\n");
#nullable restore
#line 92 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                         foreach (var item in Model.Invoices.OrderByDescending(f => f.Timestamp))
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                            <li>
                                <div class=""collapsible-header row hoverable"">
                                    <div class=""col s4"">
                                        <h6><i class=""material-icons"">calendar_today</i>");
#nullable restore
#line 97 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                                   Write(item.Timestamp.ToString("d", culture));

#line default
#line hidden
#nullable disable
            WriteLiteral("</h6>\r\n                                    </div>\r\n                                    <div class=\"col s4\">\r\n                                        <h6>Totaal: <b>&euro;");
#nullable restore
#line 100 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                        Write(Math.Round((double)item.Amount / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</b></h6>\r\n                                    </div>\r\n                                    <div class=\"col s4\">\r\n                                        <h6>Betaald: ");
#nullable restore
#line 103 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                Write(Html.Raw(Overstag.Services.Html.YesNo(item.Payed)));

#line default
#line hidden
#nullable disable
            WriteLiteral("</h6>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"collapsible-body\">\r\n                                    <div class=\"col s3\">\r\n");
#nullable restore
#line 108 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                         if (!item.Payed)
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <a class=\"waves-effect waves-light btn green\"");
            BeginWriteAttribute("onclick", " onclick=\"", 5700, "\"", 5765, 3);
            WriteAttributeValue("", 5710, "Payment.getPay(\'", 5710, 16, true);
#nullable restore
#line 110 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
WriteAttributeValue("", 5726, Uri.EscapeDataString(item.InvoiceID), 5726, 37, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 5763, "\')", 5763, 2, true);
            EndWriteAttribute();
            WriteLiteral(">Betalen &rarr;</a>\r\n                                            <br />\r\n");
#nullable restore
#line 112 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                        }
                                        else
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <a class=\"waves-effect waves-light btn blue-dark\" target=\"_blank\"");
            BeginWriteAttribute("href", " href=\"", 6080, "\"", 6137, 2);
            WriteAttributeValue("", 6087, "/Pay/Invoice/", 6087, 13, true);
#nullable restore
#line 115 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
WriteAttributeValue("", 6100, Uri.EscapeDataString(item.InvoiceID), 6100, 37, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">Factuur openen &rarr;</a>\r\n");
#nullable restore
#line 116 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                    </div>
                                    <table class=""responsive-table"">
                                        <thead>
                                            <tr>
                                                <th>Wat</th>
                                                <th>Wanneer</th>
                                                <th>Omschrijving</th>
                                                <th>Vrienden mee?</th>
                                                <th>Kosten</th>
                                                <th>Totaal</th>
                                            </tr>
                                        </thead>
                                        <tbody>
");
#nullable restore
#line 130 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                             foreach (var e in item.Events)
                                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                <tr>\r\n                                                    <td>");
#nullable restore
#line 133 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                   Write(e.Key.Title);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                    <td>");
#nullable restore
#line 134 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                   Write(e.Key.When.ToString("D", culture));

#line default
#line hidden
#nullable disable
            WriteLiteral(" om ");
#nullable restore
#line 134 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                                         Write(e.Key.When.ToString("t", culture));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                    <td>");
#nullable restore
#line 135 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                   Write(e.Key.Description);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                    <td>\r\n");
#nullable restore
#line 137 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                         if (e.Value > 0)
                                                        {
                                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 139 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                       Write(Html.Raw($"Ja, <b>{e.Value}</b>, (+&euro;{Math.Round((double)(e.Key.Cost * e.Value) / 100, 2).ToString("F")})"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 139 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                                                                                                                            
                                                        }
                                                        else
                                                        {
                                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 143 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                       Write(Html.Raw("Nee"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 143 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                            
                                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    </td>\r\n                                                    <td>&euro;");
#nullable restore
#line 146 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                         Write(Math.Round((double)e.Key.Cost / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                    <td><b>&euro;");
#nullable restore
#line 147 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                            Write(Math.Round((double)e.Key.Cost * (e.Value + 1) / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</b></td>\r\n                                                </tr>\r\n");
#nullable restore
#line 149 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                            <tr>\r\n                                                <td colspan=\"6\" class=\"center-align white-text grey darken-1\">\r\n                                                    ");
#nullable restore
#line 153 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                               Write(Html.Raw((item.AdditionsCost > 0) ? $"<br />Let op: Het totaal is <b>inclusief</b> de drankjes. (&euro;{Math.Round((double)item.AdditionsCost / 100, 2).ToString("F")})" : ""));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                                    <h5>Totaal: &euro;");
#nullable restore
#line 154 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                                                                 Write(Math.Round((double)item.Amount / 100, 2).ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h5><br />
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </li>
");
#nullable restore
#line 161 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </ul>\r\n");
#nullable restore
#line 164 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                     if (Model.Invoices.Where(f => f.Payed == false).Count() > 1)
                    {
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 166 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                   Write(Html.Raw("&nbsp;"));

#line default
#line hidden
#nullable disable
            WriteLiteral("<button class=\"btn blue-dark waves-effect modal-trigger\" data-target=\"minvoice\">&rarr; Facturen samenvoegen &larr;</button><br /><br />\r\n");
#nullable restore
#line 167 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 167 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                     
                }
                else
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <h5 class=\"center-align orange-text\">Geen facturen gevonden!</h5><br />\r\n");
#nullable restore
#line 172 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
                }

#line default
#line hidden
#nullable disable
            WriteLiteral("            </div>\r\n");
#nullable restore
#line 175 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
             if (ViewBag.Age >= 18)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                <br/><br/>
                <div class=""row center-align"">
                    <h3 class=""blue-dark-text"">Kosten declareren</h3>
                    <p>Heb je kosten gemaakt voor Overstag, bijvoorbeeld benzinekosten of boodschappen? Declareer ze hier!</p>
                    <a class=""btn blue-dark waves-effect"" href=""/User/Declaration"">Klik hier</a>
                    <br/><br/>
                </div>
");
#nullable restore
#line 184 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 184 "C:\Users\mauri\Documents\GitHub\Overstag\Overstag\Views\User\Payment.cshtml"
             

        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    </div>

<!-- Modals -->
<div id=""pay"" class=""modal"">
    <div class=""modal-content"">
        <h4>Betalen</h4>
        <h6>Je kunt er voor kiezen om zelf te betalen of om deze betaallink naar iemand anders te sturen</h6>
        <input id=""payid"" type=""text"" placeholder=""payid"" data-pid="""" />
        <a class=""btn btn-small"" onclick=""Payment.gotoPay()"">Nu zelf betalen</a>
        <a class=""btn btn-small"" onclick=""Payment.copyPay()"">Link kopiëren</a>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-close waves-effect waves-green btn-flat"">Sluiten</a>
    </div>
</div>

<div id=""ginvoice"" class=""modal"">
    <div class=""modal-content"">
        <h4>Factuur maken</h4>
        <p>
            Wanneer je een factuur maakt, worden alle tot nu toe niet betaalde of gefactureerde avonden
            (die staan hier boven) gefactureerd. Vervolgens kun je er zelf voor kiezen of je de factuur zelf, nu
            of later, of door een ander laat betalen door middel van ee");
            WriteLiteral(@"n betaallink.
        </p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""waves-effect waves-light btn modal-close orange"">Laat maar</a>
        <a href=""#!"" onclick=""Payment.generateInvoice()"" class=""waves-effect waves-light btn modal-close green"">Oké!</a>
    </div>
</div>

<div id=""minvoice"" class=""modal"">
    <div class=""modal-content"">
        <h4>Facturen samenvoegen</h4>
        <h6>Als je de facturen samenvoegd worden alle tot nu toe niet-betaalde/openstaande facturen samengevoegd tot 1 factuur.</h6>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""waves-effect waves-light btn modal-close orange"">Annuleren</a>
        <a href=""#!"" onclick=""Payment.mergeInvoices();"" class=""waves-effect waves-light btn modal-close green"">Oké doen!</a>
    </div>
</div>

<!--Script -->
<script>
    var Payment = {
        init: function () {
            $('#_apay, #_mapay').addClass('active');
        },
        generateInvoice: function () {
        ");
            WriteLiteral(@"    $.getJSON('/User/GenerateInvoice', function (data) {
                if (data.status == 'success') {
                    M.toast({ html: 'Factuur gemaakt', classes: 'green' })
                    window.location.reload();
                } else {
                    M.toast({ html: data.error, classes: 'red' })
                }
            });
        },
        getPay: function (payid) {
            $('#payid').data('pid', payid);
            $('#payid').val(window.location.origin+'/Pay/Invoice/' + payid);
            M.Modal.getInstance($('#pay')).open();
        },
        gotoPay: function () {
            window.location.href = '/Pay/Invoice/' + $('#payid').data('pid');
        },
        copyPay: function () {
            $('#payid').select();
            document.execCommand(""copy"");
            M.toast({ html: 'Link gekopieërd!', classes: 'blue' });
        },
        mergeInvoices: function () {
            $('#_progbar').show();
            $.getJSON('/User/MergeInvoices");
            WriteLiteral(@"', function (r) {
                if (r.status == 'success') {
                    M.toast({ html: 'Facturen successvol samengevoegd', classes: 'green' });
                    Core.doReload(500);
                } else {
                    M.toast({ html: r.error, classes: 'red' });
                    $('#_progbar').hide();
                }
            });
        }
    }

    Payment.init();

    $(document).ready(function () {
        $('.collapsible').collapsible();
        $('.modal').modal();
    });
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Overstag.Models.NoDB.UnpayedEvents> Html { get; private set; }
    }
}
#pragma warning restore 1591
